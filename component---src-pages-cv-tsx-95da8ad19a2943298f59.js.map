{"version":3,"sources":["webpack://renato-hermoza/./src/hooks/usePublications.tsx","webpack://renato-hermoza/./src/pages/cv.tsx","webpack://renato-hermoza/./src/hooks/useExperience.tsx","webpack://renato-hermoza/./src/hooks/useEducation.tsx","webpack://renato-hermoza/./src/hooks/useTeaching.tsx"],"names":["usePublications","useStaticQuery","allPublicationsJson","nodes","Page","children","props","className","style","width","height","pageBreakAfter","pageBreakInside","Section","title","EducationItem","university","degree","yearIn","yearOut","pending","Experience","place","position","dateIn","dateOut","details","formatYMDate","length","map","o","i","key","Teaching","Publication","authors","conference","doi","href","target","rel","publications","experience","allExperienceJson","education","allEducationJson","teaching","allTeachingJson","description","Navigation"],"mappings":"mKAGaA,EAAkB,WAiB7B,OAhBqBC,oBAAc,cAcjCC,oBAAoBC,Q,wJCHlBC,EAA4C,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,GAAhB,8BAChD,qCACEC,UAAU,6EACVC,MAAO,CACLC,MAAO,OACPC,OAAQ,SACRC,eAAgB,SAChBC,gBAAiB,UAEfN,GAEHD,IAQCQ,EAAkC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAUR,GAAb,2BACtC,sBAASA,EACP,qBAAGC,UAAU,2BAA2BO,GACxC,uBAAKP,UAAU,iCAMbQ,EAA8C,SAAC,GAAD,IAClDC,EADkD,EAClDA,WACAC,EAFkD,EAElDA,OACAC,EAHkD,EAGlDA,OACAC,EAJkD,EAIlDA,QAJkD,IAKlDC,eALkD,SAMlDb,EANkD,EAMlDA,UACGD,GAP+C,kFASlD,qCAAKC,UAAS,WAAYA,UAAa,KAAUD,GAC/C,uBAAKC,UAAU,wBACb,qBAAGA,UAAU,uBAAuBS,GACpC,qBAAGT,UAAU,yBAA4BW,EAAzC,MAAqDC,GACnDC,EAAU,cAAgB,MAG9B,yBAAIH,KAMFI,EAAwC,SAAC,GAAD,IAC5CC,EAD4C,EAC5CA,MACAC,EAF4C,EAE5CA,SACAC,EAH4C,EAG5CA,OACAC,EAJ4C,EAI5CA,QACAC,EAL4C,EAK5CA,QACAnB,EAN4C,EAM5CA,UACGD,GAPyC,+EAS5C,qCAAKC,UAAS,WAAYA,UAAa,KAAUD,GAC/C,uBAAKC,UAAU,wBACb,qBAAGA,UAAU,eACVe,EADH,IACU,gCAAQC,EAAR,MAEV,qBAAGhB,UAAU,0BACVoB,QAAaH,GADhB,OAC4BG,QAAaF,KAG1CC,EAAQE,OAAS,GAChB,sBAAIrB,UAAU,oCACXmB,EAAQG,KAAI,SAACC,EAAGC,GAAJ,OACX,sBAAIxB,UAAU,UAAUyB,IAAKD,GAC1BD,SAUPG,EAAoC,SAAC,GAAD,IACxCX,EADwC,EACxCA,MACAE,EAFwC,EAExCA,OACAC,EAHwC,EAGxCA,QACAC,EAJwC,EAIxCA,QACAnB,EALwC,EAKxCA,UACGD,GANqC,oEAQxC,qCAAKC,UAAS,WAAYA,UAAa,KAAUD,GAC/C,uBAAKC,UAAU,wBACb,qBAAGA,UAAU,eAAee,GAC5B,qBAAGf,UAAU,0BACVoB,QAAaH,GADhB,OAC4BG,QAAaF,KAG1CC,EAAQE,OAAS,GAChB,sBAAIrB,UAAU,oCACXmB,EAAQG,KAAI,SAACC,EAAGC,GAAJ,OACX,sBAAIxB,UAAU,UAAUyB,IAAKD,GAC1BD,SAYPI,EAA0C,SAAC,GAAD,IAC9CC,EAD8C,EAC9CA,QACArB,EAF8C,EAE9CA,MACAsB,EAH8C,EAG9CA,WACAC,EAJ8C,EAI9CA,IACG/B,GAL2C,wDAO9C,qBAAQA,EACL6B,EADH,IACY,wBAAM5B,UAAU,eAAhB,IAAgCO,EAAhC,KADZ,IAC4DsB,EACzDC,GACC,gCACG,SACD,qBAAGC,KAAI,mBAAqBD,EAAOE,OAAO,SAASC,IAAI,YACpDH,MAiHX,EA1GqB,WACnB,IAAMI,GAAezC,SACf0C,GClJazC,oBAAc,cAc/B0C,kBAAkBxC,MDqIdyC,GEnJY3C,oBAAc,cAe9B4C,iBAAiB1C,MFqIb2C,GGpJW7C,oBAAc,cAa7B8C,gBAAgB5C,MHyIlB,OACE,uBAAKI,UAAU,+BACb,gBAAC,IAAD,CAAKO,MAAM,KAAKkC,YAAY,UAC5B,uBAAKxC,MAAO,CAAEC,MAAO,QAAUF,UAAU,wBACvC,gBAAC0C,EAAA,EAAD,OAEF,gBAAC7C,EAAD,KACE,uBAAKG,UAAU,kCACb,qBAAGA,UAAU,0BAAb,2BACA,uBAAKA,UAAU,4BACb,qBACE+B,KAAK,+BACLC,OAAO,SACPC,IAAI,YAHN,uBAOA,qBAAGjC,UAAU,QAAb,KACA,qBAAG+B,KAAK,6BAA6BC,OAAO,SAASC,IAAI,YAAzD,gCAMJ,uBAAKjC,UAAU,SACb,gBAACM,EAAD,CAASC,MAAM,WACf,qBAAGP,UAAU,QAAb,kKAOF,uBAAKA,UAAU,QACb,gBAACM,EAAD,CAASC,MAAM,cACd8B,EAAUf,KAAI,SAACC,EAAGC,GAAJ,OACb,gBAAChB,EAAD,eAAeiB,IAAKD,EAAGxB,UAAU,QAAWuB,QAIhD,uBAAKvB,UAAU,QACb,gBAACM,EAAD,CAASC,MAAM,4BACd4B,EAAWb,KAAI,SAACC,EAAGC,GAAJ,OACd,gBAACV,EAAD,eAAYW,IAAKD,EAAGxB,UAAU,QAAWuB,QAI7C,uBAAKvB,UAAU,QACb,gBAACM,EAAD,CAASC,MAAM,wBACdgC,EAASjB,KAAI,SAACC,EAAGC,GAAJ,OACZ,gBAACE,EAAD,eAAUD,IAAKD,EAAGxB,UAAU,QAAWuB,SAK7C,gBAAC1B,EAAD,KACE,uBAAKG,UAAU,QACb,gBAACM,EAAD,CAASC,MAAM,iBACf,sBAAIP,UAAU,oCACXkC,EAAaZ,KAAI,SAACC,EAAGC,GAAJ,OAChB,gBAACG,EAAD,eAAaF,IAAKD,EAAGxB,UAAU,QAAWuB,SAKhD,uBAAKvB,UAAU,QACb,gBAACM,EAAD,CAASC,MAAM,WACf,qBAAGP,UAAU,QAAb,uGAIA,qBAAGA,UAAU,QAAb,wHAIA,qBAAGA,UAAU,QAAb,6HAIA,qBAAGA,UAAU,QAAb,uHAIA,qBAAGA,UAAU,QAAb,gEAKF,uBAAKA,UAAU,QACb,gBAACM,EAAD,CAASC,MAAM,cACf,sBAAIP,UAAU,oCACZ,8CACA","file":"component---src-pages-cv-tsx-95da8ad19a2943298f59.js","sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\nimport { PublicationsAll } from '../components/Types';\n\nexport const usePublications = () => {\n  const publications = useStaticQuery<PublicationsAll>(\n    graphql`\n      query {\n        allPublicationsJson {\n          nodes {\n            authors\n            conference\n            doi\n            title\n            year\n          }\n        }\n      }\n    `\n  ).allPublicationsJson.nodes;\n\n  return publications;\n};\n","import React, { HTMLProps } from 'react';\nimport SEO from '../components/Seo';\nimport { usePublications } from '../hooks/usePublications';\nimport { useExperience } from '../hooks/useExperience';\nimport { useEducation } from '../hooks/useEducation';\nimport { useTeaching } from '../hooks/useTeaching';\nimport {\n  Publication as PublicationType,\n  Education as EducationType,\n  Experience as ExperienceType,\n  Teaching as TeachingType,\n} from '../components/Types';\nimport { formatYMDate } from '../utils';\nimport { Navigation } from '../components/Navigation';\n\nconst Page: React.FC<HTMLProps<HTMLDivElement>> = ({ children, ...props }) => (\n  <div\n    className=\"mx-auto mb-4 print:mb-0 px-8 py-4 bg-gray-100 shadow-2xl print:shadow-none\"\n    style={{\n      width: '21cm',\n      height: '29.7cm',\n      pageBreakAfter: 'always',\n      pageBreakInside: 'avoid',\n    }}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\ninterface SectionProps extends HTMLProps<HTMLDivElement> {\n  title: string;\n}\n\nconst Section: React.FC<SectionProps> = ({ title, ...props }) => (\n  <div {...props}>\n    <p className=\"text-2xl font-extrabold\">{title}</p>\n    <div className=\"border-b-4 border-gray-400\" />\n  </div>\n);\n\ninterface EducationItemProps extends HTMLProps<HTMLDivElement>, EducationType {}\n\nconst EducationItem: React.FC<EducationItemProps> = ({\n  university,\n  degree,\n  yearIn,\n  yearOut,\n  pending = false,\n  className,\n  ...props\n}) => (\n  <div className={`w-full ${className ?? ''}`} {...props}>\n    <div className=\"flex justify-between\">\n      <p className=\"font-medium text-lg\">{university}</p>\n      <p className=\"text-gray-600 text-sm\">{`${yearIn} - ${yearOut}${\n        pending ? ' (expected)' : ''\n      }`}</p>\n    </div>\n    <p>{degree}</p>\n  </div>\n);\n\ninterface ExperienceProps extends HTMLProps<HTMLDivElement>, ExperienceType {}\n\nconst Experience: React.FC<ExperienceProps> = ({\n  place,\n  position,\n  dateIn,\n  dateOut,\n  details,\n  className,\n  ...props\n}) => (\n  <div className={`w-full ${className ?? ''}`} {...props}>\n    <div className=\"flex justify-between\">\n      <p className=\"font-medium\">\n        {place} <span>({position})</span>\n      </p>\n      <p className=\"text-gray-600 text-sm\">\n        {formatYMDate(dateIn)} - {formatYMDate(dateOut)}\n      </p>\n    </div>\n    {details.length > 0 && (\n      <ul className=\"pl-4 list-outside ml-4 list-disc\">\n        {details.map((o, i) => (\n          <li className=\"text-sm\" key={i}>\n            {o}\n          </li>\n        ))}\n      </ul>\n    )}\n  </div>\n);\n\ninterface TeachingProps extends HTMLProps<HTMLDivElement>, TeachingType {}\n\nconst Teaching: React.FC<TeachingProps> = ({\n  place,\n  dateIn,\n  dateOut,\n  details,\n  className,\n  ...props\n}) => (\n  <div className={`w-full ${className ?? ''}`} {...props}>\n    <div className=\"flex justify-between\">\n      <p className=\"font-medium\">{place}</p>\n      <p className=\"text-gray-600 text-sm\">\n        {formatYMDate(dateIn)} - {formatYMDate(dateOut)}\n      </p>\n    </div>\n    {details.length > 0 && (\n      <ul className=\"pl-4 list-outside ml-4 list-disc\">\n        {details.map((o, i) => (\n          <li className=\"text-sm\" key={i}>\n            {o}\n          </li>\n        ))}\n      </ul>\n    )}\n  </div>\n);\n\ninterface PublicationProps\n  extends Omit<HTMLProps<HTMLLIElement>, 'title'>,\n    PublicationType {}\n\nconst Publication: React.FC<PublicationProps> = ({\n  authors,\n  title,\n  conference,\n  doi,\n  ...props\n}) => (\n  <li {...props}>\n    {authors} <span className=\"font-medium\">“{title}”</span> {conference}\n    {doi && (\n      <>\n        {' DOI: '}\n        <a href={`https://doi.org/${doi}`} target=\"_black\" rel=\"noopener\">\n          {doi}\n        </a>\n      </>\n    )}\n  </li>\n);\n\nconst CV: React.FC = () => {\n  const publications = usePublications();\n  const experience = useExperience();\n  const education = useEducation();\n  const teaching = useTeaching();\n\n  return (\n    <div className=\"bg-gray-500 pb-1 print:pb-0\">\n      <SEO title=\"CV\" description=\"My CV\" />\n      <div style={{ width: '21cm' }} className=\"mx-auto print:hidden\">\n        <Navigation />\n      </div>\n      <Page>\n        <div className=\"mt-8 text-center leading-tight\">\n          <p className=\"text-3xl font-semibold\">Renato Hermoza Aragonés</p>\n          <div className=\"flex mt-1 justify-center\">\n            <a\n              href=\"https://renato145.github.io/\"\n              target=\"_black\"\n              rel=\"noopener\"\n            >\n              renato145.github.io\n            </a>\n            <p className=\"mx-2\">•</p>\n            <a href=\"renato.hermoza@pucp.edu.pe\" target=\"_black\" rel=\"noopener\">\n              renato.hermoza@pucp.edu.pe\n            </a>\n          </div>\n        </div>\n\n        <div className=\"mt-10\">\n          <Section title=\"Resume\" />\n          <p className=\"mt-2\">\n            Final year PhD. student at the University of Adelaide with main\n            research interests in the fields of computer vision, machine\n            learning and data visualization.\n          </p>\n        </div>\n\n        <div className=\"mt-8\">\n          <Section title=\"Education\" />\n          {education.map((o, i) => (\n            <EducationItem key={i} className=\"mt-2\" {...o} />\n          ))}\n        </div>\n\n        <div className=\"mt-8\">\n          <Section title=\"Professional Experience\" />\n          {experience.map((o, i) => (\n            <Experience key={i} className=\"mt-2\" {...o} />\n          ))}\n        </div>\n\n        <div className=\"mt-8\">\n          <Section title=\"Teaching Experience\" />\n          {teaching.map((o, i) => (\n            <Teaching key={i} className=\"mt-2\" {...o} />\n          ))}\n        </div>\n      </Page>\n\n      <Page>\n        <div className=\"mt-8\">\n          <Section title=\"Publications\" />\n          <ul className=\"mt-2 list-outside ml-4 list-disc\">\n            {publications.map((o, i) => (\n              <Publication key={i} className=\"mt-1\" {...o} />\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"mt-8\">\n          <Section title=\"Skills\" />\n          <p className=\"mt-2\">\n            Knowledge and active research of the current state of the art on\n            deep learning and computer vision.\n          </p>\n          <p className=\"mt-1\">\n            Advance skill on Python building data pipelines, machine learning\n            models, web servers and open software development.\n          </p>\n          <p className=\"mt-1\">\n            Experience using Rust for CLI applications, web APIs, Python\n            bindings and high-performance use cases like data pipelines.\n          </p>\n          <p className=\"mt-1\">\n            Experience building data visualization and interactive dashboards\n            using Python and JavaScript (React, D3, Threejs).\n          </p>\n          <p className=\"mt-1\">\n            Main programming languages: Python, Rust and JS/Typescript.\n          </p>\n        </div>\n\n        <div className=\"mt-8\">\n          <Section title=\"Languages\" />\n          <ul className=\"mt-2 list-outside ml-4 list-disc\">\n            <li>Spanish (native)</li>\n            <li>English (fluent)</li>\n          </ul>\n        </div>\n      </Page>\n    </div>\n  );\n};\n\nexport default CV;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { ExperienceAll } from '../components/Types';\n\nexport const useExperience = () => {\n  const experience = useStaticQuery<ExperienceAll>(\n    graphql`\n      query {\n        allExperienceJson {\n          nodes {\n            place\n            position\n            dateIn\n            dateOut\n            details\n          }\n        }\n      }\n    `\n  ).allExperienceJson.nodes;\n\n  return experience;\n};\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { EducationAll } from '../components/Types';\n\nexport const useEducation = () => {\n  const education = useStaticQuery<EducationAll>(\n    graphql`\n      query {\n        allEducationJson {\n          nodes {\n            university\n            degree\n            yearIn\n            yearOut\n            country\n            pending\n          }\n        }\n      }\n    `\n  ).allEducationJson.nodes;\n\n  return education;\n};\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { TeachingAll } from '../components/Types';\n\nexport const useTeaching = () => {\n  const teaching = useStaticQuery<TeachingAll>(\n    graphql`\n      query {\n        allTeachingJson {\n          nodes {\n            place\n            dateIn\n            dateOut\n            details\n          }\n        }\n      }\n    `\n  ).allTeachingJson.nodes;\n\n  return teaching;\n};\n"],"sourceRoot":""}