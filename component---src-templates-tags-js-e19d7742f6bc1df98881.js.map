{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/GithubPreview.js","webpack:///./src/components/Experiments.js","webpack:///./src/components/LinkButton.js","webpack:///./src/components/PostPreview.js","webpack:///./src/components/Posts.js"],"names":["TagsTemplate","pageContext","data","location","tag","posts","allMdx","edges","title","headerConfig","className","pageQuery","GithubPreview","props","homepageUrl","url","imgUrl","name","tags","description","updatedAt","href","target","src","moment","calendar","sameElse","TagList","Experiments","showLimit","showLoadMore","loadMoreText","gitRepos","useGitRepos","useState","limit","setLimit","visibleRepos","slice","length","map","repo","i","key","LinkButton","onClick","children","PostPreview","node","postTitle","frontmatter","fields","slug","to","date","dangerouslySetInnerHTML","__html","excerpt","Posts","visiblePosts"],"mappings":"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","file":"component---src-templates-tags-js-e19d7742f6bc1df98881.js","sourcesContent":["import React from 'react';\nimport { Layout } from '../components/Layout';\nimport { Posts } from '../components/Posts';\nimport { Experiments } from '../components/Experiments';\nimport { graphql } from 'gatsby';\n\nconst TagsTemplate = ({ pageContext, data, location }) => {\n  const { tag } = pageContext;\n  const posts = data.allMdx?.edges;\n\n  return (\n    <Layout\n      location={location}\n      title={tag}\n      // description='some description'\n      headerConfig={{ title: tag }}\n    >\n      <Posts posts={posts} title />\n      <hr className=\"mb-4\" />\n      <Experiments tag={tag} title />\n    </Layout>\n  );\n};\n\nexport default TagsTemplate;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport moment from 'moment';\nimport { TagList } from './TagList';\n\nexport const GithubPreview = ({ data, ...props }) => {\n  const { homepageUrl, url, imgUrl, name, tags, description, updatedAt } = data;\n\n  return (\n    <div {...props}>\n      <div className=\"w-full p-1 transition duration-150 rounded border shadow-sm hover:shadow-md\">\n        {imgUrl && (\n          <a href={homepageUrl || url} target=\"_black\">\n            <img className=\"\" src={imgUrl} />\n          </a>\n        )}\n\n        <div className=\"mt-0 px-3 pb-2\">\n          <div>\n            {updatedAt && (\n              <small className=\"text-gray-600\">\n                Last updated:{' '}\n                {moment(updatedAt).calendar(null, {\n                  sameElse: 'DD/MM/YYYY',\n                })}\n              </small>\n            )}\n          </div>\n          <div className=\"text-xl font-semibold\">{name}</div>\n          <TagList className=\"text-xs\" tags={tags} />\n          <div className=\"mt-1\">{description}</div>\n          <div className=\"mt-4 flex flex-wrap justify-between\">\n            {url && (\n              <a href={url} target=\"_black\">\n                Go to code\n              </a>\n            )}\n            {homepageUrl && (\n              <a href={homepageUrl} target=\"_black\">\n                View\n              </a>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { GithubPreview } from './GithubPreview';\nimport { LinkButton } from './LinkButton';\nimport { useGitRepos } from './useGitRepos';\n\nexport const Experiments = ({\n  title = false,\n  showLimit = 6,\n  showLoadMore = true,\n  loadMoreText = 'Load more',\n  tag,\n  ...props\n}) => {\n  const gitRepos = useGitRepos({ tag });\n  const [limit, setLimit] = useState(showLimit);\n  const visibleRepos = gitRepos.slice(0, limit || gitRepos.length);\n\n  return (\n    <div {...props}>\n      {title && <h2 className=\"font-medium\">Experiments</h2>}\n      <div className=\"mt-2 flex flex-wrap items-stretch\">\n        {visibleRepos.map((repo, i) => (\n          <GithubPreview key={i} data={repo} className=\"flex flex-auto p-2 md:max-w-1/2 xl:max-w-1/3\" />\n        ))}\n      </div>\n      {showLoadMore && visibleRepos.length < gitRepos.length && (\n        <div className=\"mr-4 text-right\">\n          <LinkButton onClick={() => setLimit((limit) => limit + showLimit)}>\n            {loadMoreText}\n          </LinkButton>\n        </div>\n      )}\n      {gitRepos.length === 0 && <div>...</div>}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const LinkButton = ({ children, ...props }) => (\n  <button\n    className=\"p-0 bg-opacity-0 hover:bg-opacity-0 active:bg-opacity-0 focus:shadow-none text-blue-600 hover:text-blue-800\"\n    {...props}\n  >\n    {children}\n  </button>\n);\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { TagList } from './TagList';\n\nexport const PostPreview = ({ node, ...props }) => {\n  const postTitle = node.frontmatter.title || node.fields.slug;\n  const tags = node.frontmatter.tags;\n\n  return (\n    <div {...props}>\n      <div>\n        <Link to={node.fields.slug} className=\"text-xl font-medium\">\n          {postTitle}\n        </Link>\n      </div>\n      <div className=\"flex text-xs text-gray-600\">\n        <p>{node.frontmatter.date}</p>\n        <p className=\"px-1\">-</p>\n        <TagList tags={tags} />\n      </div>\n      <p\n        className=\"mt-1\"\n        dangerouslySetInnerHTML={{\n          __html: node.frontmatter.description || node.excerpt,\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { PostPreview } from './PostPreview';\nimport { LinkButton } from './LinkButton';\n\nexport const Posts = ({\n  title = false,\n  showLimit = 6,\n  showLoadMore = true,\n  loadMoreText = 'Load more',\n  posts,\n  ...props\n}) => {\n  const [limit, setLimit] = useState(showLimit);\n  const visiblePosts = posts.slice(0, limit || posts.length);\n\n  return (\n    <div {...props}>\n      {title && <h2 className=\"font-medium\">Posts</h2>}\n      <div className=\"mt-2 flex flex-wrap\">\n        {visiblePosts.map(({ node }, i) => (\n          <PostPreview node={node} key={node.fields.slug} className=\"w-full lg:w-1/2 mb-4\" />\n          // <PostPreview node={node} key={node.fields.slug} className=\"w-full lg:max-w-sm mb-4\" />\n        ))}\n      </div>\n      {showLoadMore && visiblePosts.length < posts.length && (\n        <div className=\"mt-0 ml-2\">\n          <LinkButton onClick={() => setLimit((limit) => limit + showLimit)}>\n            {loadMoreText}\n          </LinkButton>\n        </div>\n      )}\n      {posts.length === 0 && <div>...</div>}\n    </div>\n  );\n};\n"],"sourceRoot":""}