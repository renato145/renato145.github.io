{"version":3,"file":"component---src-pages-about-tsx-361fea096ae94ca8d3dd.js","mappings":"kKAGaA,EAAkB,WAiB7B,OAhBqBC,EAAAA,EAAAA,gBAAAA,cAAAA,oBAArB,Q,2KCSIC,EAA0C,SAAC,GAAD,IAC9CC,EAD8C,UAE9CC,EAF8C,QAG9CC,EAH8C,aAI9CC,EAJ8C,MAK3CC,GAL2C,mBAO9C,6BACY,wBAAMC,UAAU,eAAhB,MADZ,WAEGF,GACC,yCAEE,qBAAGG,KAAI,mBAAP,EAAmCC,OAAnC,SAAmDC,IAAI,YAZf,MAiFhD,EAzD+B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAEtC,EAAyBD,EAAAA,KAAzB,aAAQE,EAAR,SAAgBC,EAAhB,OACMC,GCpCOf,EAAAA,EAAAA,gBAAAA,aAAAA,YAAb,MDqCMgB,GAAejB,EAAAA,EAAAA,KACfkB,GEtCgBjB,EAAAA,EAAAA,gBAAAA,cAAAA,qBAAtB,MFwCA,OACE,qBACEY,SADF,EAEET,MAFF,WAIEe,aAAc,CAAEf,MAXpB,UAaI,uBAAKI,UAAU,oBACb,0CADF,ocAUE,qKAGE,qBAAGC,KAAI,UAAYM,GAHrB,GAVF,KAeE,+CACqB,wBAAMK,GAAE,OAD7B,QAfF,KAkBE,0BAlBF,QAmBE,0BACGJ,EAAA,KAAS,kBAAGK,EAAH,OAASC,EAAT,cACR,sBAAIC,IAAKC,IACNC,EAAAA,EAAAA,IAAaH,EADhB,kBADQ,OAMZ,0BA1BF,gBA2BE,0BACGL,EAAA,KAAiB,qBAChB,iCAAaM,IAAKC,GADF,QAIpB,0BAhCF,iBAiCE,0BACGN,EAAA,KAAkB,kBAAGG,EAAH,cACjB,sBAAIE,IAAKC,GADQ","sources":["webpack://renato-hermoza/./src/hooks/usePublications.tsx","webpack://renato-hermoza/./src/pages/about.tsx","webpack://renato-hermoza/./src/hooks/useNews.tsx","webpack://renato-hermoza/./src/hooks/usePresentations.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\nimport { PublicationsAll } from '../Types';\n\nexport const usePublications = () => {\n  const publications = useStaticQuery<PublicationsAll>(\n    graphql`\n      query {\n        allPublicationsJson {\n          nodes {\n            authors\n            conference\n            doi\n            title\n            year\n          }\n        }\n      }\n    `\n  ).allPublicationsJson.nodes;\n\n  return publications;\n};\n","import React, { HTMLProps } from 'react';\nimport { graphql, Link, PageProps } from 'gatsby';\nimport { Layout } from '../components/Layout';\nimport { formatYMDate } from '../utils';\nimport { GraphqlSite, Publication as PublicationType } from '../Types';\nimport { usePublications } from '../hooks/usePublications';\nimport { useNews } from '../hooks/useNews';\nimport { usePresentations } from '../hooks/usePresentations';\n\ninterface PublicationProps\n  extends Omit<HTMLProps<HTMLLIElement>, 'title'>,\n    PublicationType {}\n\nconst Publication: React.FC<PublicationProps> = ({\n  authors,\n  title,\n  conference,\n  doi,\n  ...props\n}) => (\n  <li {...props}>\n    {authors} <span className=\"font-medium\">“{title}”</span> {conference}\n    {doi && (\n      <>\n        {' DOI: '}\n        <a href={`https://doi.org/${doi}`} target=\"_black\" rel=\"noopener\">\n          {doi}\n        </a>\n      </>\n    )}\n  </li>\n);\n\ninterface Props extends PageProps {\n  data: GraphqlSite;\n}\n\nconst About: React.FC<Props> = ({ data, location }) => {\n  const title = 'About';\n  const { author, mail } = data.site.siteMetadata;\n  const news = useNews();\n  const publications = usePublications();\n  const presentations = usePresentations();\n\n  return (\n    <Layout\n      location={location}\n      title=\"About me\"\n      // description={title}\n      headerConfig={{ title }}\n    >\n      <div className=\"prose max-w-none\">\n        <p>\n          Hi! this is {author}. I have PhD on Machine Learning from the\n          University of Adelaide (waiting for graduation), my work focused on\n          applying machine learning to medical images, survival prediction and\n          weakly supervised localization. My main research interests are in the\n          fields of machine learning, optimization, simulation and data\n          visualization. I enjoy building interactive systems to allow domain\n          experts to explore complex machine learning and optimization systems.\n        </p>\n        <p>\n          I'm always up to apply my knowledge on impactful and social projects.\n          If you are interested in doing a collaboration, send me a mail:{' '}\n          <a href={`mailto:${mail}`}>{mail}</a>.\n        </p>\n        <p>\n          You can find my CV <Link to={`/cv`}>here</Link>.\n        </p>\n        <h2>News</h2>\n        <ul>\n          {news.map(({ text, date }, i) => (\n            <li key={i}>\n              {formatYMDate(date, 'MMMM yyyy')}: {text}\n            </li>\n          ))}\n        </ul>\n        <h2>Publications</h2>\n        <ul>\n          {publications.map((o, i) => (\n            <Publication key={i} {...o} />\n          ))}\n        </ul>\n        <h2>Presentations</h2>\n        <ul>\n          {presentations.map(({ text }, i) => (\n            <li key={i}>{text}</li>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default About;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author\n        mail\n      }\n    }\n  }\n`;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { NewsAll } from '../Types';\n\nexport const useNews = () => {\n  const news = useStaticQuery<NewsAll>(\n    graphql`\n      query {\n        allNewsJson {\n          nodes {\n            date\n            text\n          }\n        }\n      }\n    `\n  ).allNewsJson.nodes;\n\n  return news;\n};\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { PresentationsAll } from '../Types';\n\nexport const usePresentations = () => {\n  const presentations = useStaticQuery<PresentationsAll>(\n    graphql`\n      query {\n        allPresentationsJson {\n          nodes {\n            date\n            text\n          }\n        }\n      }\n    `\n  ).allPresentationsJson.nodes;\n\n  return presentations;\n};\n"],"names":["usePublications","useStaticQuery","Publication","authors","title","conference","doi","props","className","href","target","rel","data","location","author","mail","news","publications","presentations","headerConfig","to","text","date","key","i","formatYMDate"],"sourceRoot":""}