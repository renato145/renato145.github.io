{"version":3,"file":"component---src-pages-experiments-tsx-755f53a7f2de18690fdb.js","mappings":"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","sources":["webpack://renato-hermoza/./src/components/GithubPreview.tsx","webpack://renato-hermoza/./src/components/Experiments.tsx","webpack://renato-hermoza/./src/components/LinkButton.tsx","webpack://renato-hermoza/./src/hooks/useGitRepos.tsx","webpack://renato-hermoza/./src/hooks/useIntersectionObserver.tsx","webpack://renato-hermoza/./src/pages/experiments.tsx"],"sourcesContent":["import React, { HTMLProps } from 'react';\nimport { TagList } from './TagList';\nimport { RepoInfo } from '../Types';\nimport { formatRelativeDate } from '../utils';\n\ninterface Props extends Omit<HTMLProps<HTMLDivElement>, 'data'> {\n  data: RepoInfo;\n}\n\nexport const GithubPreview: React.FC<Props> = ({ data, ...props }) => {\n  const { homepageUrl, url, imgUrl, name, tags, description, updatedAt } = data;\n\n  return (\n    <div {...props}>\n      <div className=\"w-full rounded border p-1 shadow-sm hover:shadow-xl\">\n        {imgUrl && (\n          <a href={homepageUrl || url} target=\"_black\" rel=\"noopener\">\n            <img className=\"\" src={imgUrl} alt={name} />\n          </a>\n        )}\n\n        <div className=\"mt-0 px-3 pb-2\">\n          <div>\n            {updatedAt && (\n              <small className=\"text-gray-500\">\n                Last updated:{' '}\n                {formatRelativeDate(new Date(updatedAt), 'dd/MM/yyyy')}\n              </small>\n            )}\n          </div>\n          <div className=\"text-xl font-semibold\">{name}</div>\n          <TagList linkClassName=\"text-xs\" tags={tags} />\n          <div className=\"mt-1\">{description}</div>\n          <div className=\"mt-4 flex flex-wrap justify-between\">\n            {url && (\n              <a href={url} target=\"_black\" rel=\"noopener\">\n                Go to code\n              </a>\n            )}\n            {homepageUrl && (\n              <a href={homepageUrl} target=\"_black\" rel=\"noopener\">\n                View\n              </a>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { HTMLProps, useCallback, useRef, useState } from 'react';\nimport { GithubPreview } from './GithubPreview';\nimport { LinkButton } from './LinkButton';\nimport { useGitRepos } from '../hooks/useGitRepos';\nimport { useIntersectionObserver } from '../hooks/useIntersectionObserver';\n\ninterface Props extends Omit<HTMLProps<HTMLDivElement>, 'title'> {\n  title?: boolean;\n  showLimit?: number;\n  showLoadMore?: boolean;\n  loadMoreText?: string;\n  autoLoadMore?: boolean;\n  tag?: string;\n}\n\nexport const Experiments: React.FC<Props> = ({\n  title = false,\n  showLimit = 6,\n  showLoadMore = true,\n  loadMoreText = 'Load more',\n  autoLoadMore = true,\n  tag,\n  ...props\n}) => {\n  const gitRepos = useGitRepos({ tag });\n  const [limit, setLimit] = useState(showLimit);\n  const visibleRepos = gitRepos.slice(0, limit || gitRepos.length);\n  const increaseLimit = useCallback(() => {\n    if (limit < gitRepos.length) setLimit((limit) => limit + showLimit);\n  }, [limit, gitRepos.length, showLimit]);\n  const ref = useRef<HTMLDivElement>(null);\n  useIntersectionObserver({\n    target: ref,\n    onIntersect: increaseLimit,\n    enabled: autoLoadMore,\n  });\n\n  return (\n    <div {...props}>\n      {title && <h2 className=\"font-medium\">Experiments</h2>}\n      <div className=\"mt-2 grid gap-4 md:grid-cols-2 xl:grid-cols-3\">\n        {visibleRepos.map((repo, i) => (\n          <GithubPreview key={i} data={repo} className=\"flex\" />\n        ))}\n      </div>\n      {showLoadMore && visibleRepos.length < gitRepos.length && (\n        <div ref={ref} className=\"mr-4 text-right\">\n          <LinkButton onClick={increaseLimit}>{loadMoreText}</LinkButton>\n        </div>\n      )}\n      {gitRepos.length === 0 && <div>...</div>}\n    </div>\n  );\n};\n","import React, { HTMLProps } from 'react';\n\ninterface Props\n  extends Omit<HTMLProps<HTMLButtonElement>, 'className' | 'type'> {}\n\nexport const LinkButton: React.FC<Props> = ({ children, ...props }) => (\n  <button\n    className=\"bg-opacity-0 p-0 text-sky-600 hover:bg-opacity-0 hover:text-sky-800 focus:shadow-none active:bg-opacity-0\"\n    {...props}\n  >\n    {children}\n  </button>\n);\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { useMemo } from 'react';\nimport { unCamelCase, singleSpace, titleCase } from '../utils';\nimport { GraphqlGit, GraphqlGithubAll, RepoInfo } from '../Types';\n\nconst formatName: (string) => string = (name) =>\n  titleCase(singleSpace(unCamelCase(name.replace(/[-_]/g, ' '))));\n\ninterface Props {\n  tag?: string;\n  name?: string;\n}\n\nexport const useGitRepos = ({ tag, name }: Props) => {\n  const data = useStaticQuery<GraphqlGithubAll>(\n    graphql`\n      query {\n        allGitReposJson {\n          nodes {\n            name\n            showName\n            tags\n          }\n        }\n        github {\n          repositoryOwner(login: \"renato145\") {\n            repositories(\n              last: 100\n              orderBy: { field: UPDATED_AT, direction: ASC }\n            ) {\n              nodes {\n                name\n                homepageUrl\n                url\n                updatedAt\n                openGraphImageUrl\n                description\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n  const allRepos = data.github.repositoryOwner.repositories.nodes;\n  const gitRepos = data.allGitReposJson.nodes;\n\n  const repos: RepoInfo[] = useMemo(() => {\n    let data: any = [];\n    gitRepos.forEach((d) => {\n      if (name && d.name !== name) return;\n      if (tag && d.tags.indexOf(tag) === -1) return;\n      const repoInfo = {\n        ...allRepos.find((o) => o.name === d.name),\n      } as GraphqlGit;\n      const repo = Object.assign(repoInfo, d);\n      const url = repo['openGraphImageUrl'];\n      if (url.indexOf('https://repository-images') > -1) repo['imgUrl'] = url;\n      repo['name'] = repo['showName']\n        ? repo['showName']\n        : formatName(repo['name']);\n      data.push(repo);\n    });\n\n    return data;\n  }, [allRepos, gitRepos, tag, name]);\n\n  return repos;\n};\n","import React from 'react';\nimport { useEffect } from 'react';\n\ninterface Props extends IntersectionObserverInit {\n  target: React.RefObject<HTMLElement>;\n  onIntersect: () => void;\n  enabled?: boolean;\n}\n\nexport const useIntersectionObserver: (props: Props) => void = ({\n  target,\n  onIntersect,\n  enabled = true,\n  root,\n  rootMargin = '0px',\n  threshold = 1.0,\n}) => {\n  useEffect(() => {\n    if (!enabled) return;\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => entry.isIntersecting && onIntersect());\n      },\n      {\n        root,\n        rootMargin,\n        threshold,\n      }\n    );\n\n    const el = target && target.current;\n    if (!el) return;\n\n    observer.observe(el);\n\n    return () => observer.unobserve(el);\n  }, [target.current, enabled]);\n};\n","import React from 'react';\nimport { Layout } from '../components/Layout';\nimport { Experiments } from '../components/Experiments';\nimport { PageProps } from 'gatsby';\n\nconst ExperimentIndex: React.FC<PageProps> = ({ location }) => {\n  const title = 'Experiments';\n\n  return (\n    <Layout\n      location={location}\n      title={title}\n      description=\"Playground, experiments, random codes...\"\n      headerConfig={{ title }}\n    >\n      <Experiments showLimit={9} />\n    </Layout>\n  );\n};\n\nexport default ExperimentIndex;\n"],"names":["GithubPreview","data","props","homepageUrl","url","imgUrl","name","tags","description","updatedAt","className","href","target","rel","src","alt","formatRelativeDate","Date","linkClassName","Experiments","title","showLimit","showLoadMore","loadMoreText","autoLoadMore","tag","gitRepos","useGitRepos","useState","limit","setLimit","visibleRepos","increaseLimit","useCallback","ref","useRef","useIntersectionObserver","onIntersect","enabled","key","onClick","LinkButton","children","useStaticQuery","allRepos","repos","useMemo","d","repoInfo","o","repo","Object","titleCase","singleSpace","unCamelCase","formatName","root","rootMargin","threshold","useEffect","observer","IntersectionObserver","entries","entry","el","location","headerConfig"],"sourceRoot":""}