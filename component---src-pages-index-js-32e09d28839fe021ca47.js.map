{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./node_modules/react-bootstrap/esm/Button.js","webpack:///./src/components/Experiments.js","webpack:///./src/components/PostPreview.js","webpack:///./src/components/Posts.js"],"names":["Index","data","location","site","siteMetadata","title","description","posts","allMdx","edges","headerConfig","className","pageQuery","Button","forwardRef","_ref","ref","bsPrefix","variant","size","active","block","type","as","props","prefix","classes","href","createElement","disabled","Component","displayName","defaultProps","Experiments","showLimit","showLoadMore","loadMoreTitle","tag","gitRepos","useGitRepos","useState","limit","setLimit","visibleRepos","slice","length","map","repo","i","key","onClick","PostTitle","styled","h3","PostPreview","node","postTitle","frontmatter","fields","slug","tags","to","date","TagList","dangerouslySetInnerHTML","__html","excerpt","LoadMore","div","Posts","visiblePosts"],"mappings":"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","file":"component---src-pages-index-js-32e09d28839fe021ca47.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Posts from '../components/Posts';\nimport Experiments from '../components/Experiments';\n\nconst Index = ({ data, location }) => {\n  const { title, description } = data.site.siteMetadata;\n  const posts = data.allMdx.edges;\n\n  return (\n    <Layout\n      location={location}\n      title={title}\n      description={description}\n      headerConfig={{ title: 'Home' }}\n    >\n      <Posts posts={posts} title />\n      <hr className=\"mb-4\" />\n      <Experiments title />\n    </Layout>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false,\n  type: 'button'\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (!as) {\n    props.type = type;\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React, { useState } from 'react';\nimport GithubPreview from './GithubPreview';\nimport './Experiments.css';\nimport { Button } from 'react-bootstrap';\nimport { useGitRepos } from './useGitRepos';\n\nconst Experiments = ({\n  title = false,\n  showLimit = 6,\n  showLoadMore = true,\n  loadMoreTitle = 'Load more',\n  tag\n}) => {\n  const gitRepos = useGitRepos({tag});\n  const [limit, setLimit] = useState(showLimit);\n  const visibleRepos = gitRepos.slice(0, limit || gitRepos.length);\n\n  return (\n    <>\n      {title && <h2 className=\"general-title\">Experiments</h2>}\n      <div className=\"row row-cols-1 row-cols-md-2\">\n        {visibleRepos.map((repo, i) => (\n          <GithubPreview key={i} data={repo} />\n        ))}\n      </div>\n      {showLoadMore && visibleRepos.length < gitRepos.length && (\n        <div className=\"experiments-load-more\">\n          <Button\n            variant=\"link\"\n            onClick={() => setLimit(limit => limit + showLimit)}\n          >\n            {loadMoreTitle}\n          </Button>\n        </div>\n      )}\n      {gitRepos.length === 0 && <div>...</div>}\n    </>\n  );\n};\n\nexport default Experiments;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport TagList from './TagList';\nimport styled from 'styled-components';\n\nconst PostTitle = styled.h3`\n  font-size: 1.5rem;\n  margin-bottom: 0px;\n`;\n\nconst PostPreview = ({ node }) => {\n  const postTitle = node.frontmatter.title || node.fields.slug;\n  const tags = node.frontmatter.tags;\n\n  return (\n    <article className=\"mb-4\">\n      <header className=\"mb-1\">\n        <PostTitle>\n          <Link to={node.fields.slug}>{postTitle}</Link>\n        </PostTitle>\n        <small className=\"text-muted\">\n          {node.frontmatter.date}\n          <TagList tags={tags} prefix=\" - \" />\n        </small>\n      </header>\n      <section>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: node.frontmatter.description || node.excerpt,\n          }}\n        />\n      </section>\n    </article>\n  );\n};\n\nexport default PostPreview;\n","import React, { useState } from 'react';\nimport PostPreview from './PostPreview';\nimport styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\nimport './Posts.css';\n\nconst LoadMore = styled.div`\n  text-align: start;\n  margin-right: 0.2rem;\n`;\n\nconst Posts = ({\n  title = false,\n  showLimit = 5,\n  showLoadMore = true,\n  loadMoreTitle = 'Load more',\n  posts,\n}) => {\n  const [limit, setLimit] = useState(showLimit);\n  const visiblePosts = posts.slice(0, limit || posts.length);\n\n  return (\n    <>\n      {title && <h2 className=\"general-title\">Posts</h2>}\n      {visiblePosts.map(({ node }) => (\n        <PostPreview node={node} key={node.fields.slug} />\n      ))}\n      {showLoadMore && visiblePosts.length < posts.length && (\n        <LoadMore>\n          <Button\n            variant=\"link\"\n            onClick={() => setLimit((limit) => limit + showLimit)}\n          >\n            {loadMoreTitle}\n          </Button>\n        </LoadMore>\n      )}\n      {posts.length === 0 && <div>...</div>}\n    </>\n  );\n};\n\nexport default Posts;\n"],"sourceRoot":""}