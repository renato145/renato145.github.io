{"version":3,"file":"component---src-pages-experiments-tsx-88367c692b5d213b1695.js","mappings":"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","sources":["webpack://renato-hermoza/./src/components/GithubPreview.tsx","webpack://renato-hermoza/./src/components/Experiments.tsx","webpack://renato-hermoza/./src/components/LinkButton.tsx","webpack://renato-hermoza/./src/hooks/useGitRepos.tsx","webpack://renato-hermoza/./src/hooks/useIntersectionObserver.tsx","webpack://renato-hermoza/./src/pages/experiments.tsx"],"sourcesContent":["import React, { HTMLProps } from 'react';\nimport { TagList } from './TagList';\nimport { RepoInfo } from './Types';\nimport { formatRelativeDate } from '../utils';\n\ninterface Props extends Omit<HTMLProps<HTMLDivElement>, 'data'> {\n  data: RepoInfo;\n}\n\nexport const GithubPreview: React.FC<Props> = ({ data, ...props }) => {\n  const { homepageUrl, url, imgUrl, name, tags, description, updatedAt } = data;\n\n  return (\n    <div {...props}>\n      <div className=\"w-full p-1 rounded border shadow-sm hover:shadow-xl\">\n        {imgUrl && (\n          <a href={homepageUrl || url} target=\"_black\" rel=\"noopener\">\n            <img className=\"\" src={imgUrl} alt={name} />\n          </a>\n        )}\n\n        <div className=\"mt-0 px-3 pb-2\">\n          <div>\n            {updatedAt && (\n              <small className=\"text-gray-500\">\n                Last updated:{' '}\n                {formatRelativeDate(new Date(updatedAt), 'dd/MM/yyyy')}\n              </small>\n            )}\n          </div>\n          <div className=\"text-xl font-semibold\">{name}</div>\n          <TagList linkClassName=\"text-xs\" tags={tags} />\n          <div className=\"mt-1\">{description}</div>\n          <div className=\"mt-4 flex flex-wrap justify-between\">\n            {url && (\n              <a href={url} target=\"_black\" rel=\"noopener\">\n                Go to code\n              </a>\n            )}\n            {homepageUrl && (\n              <a href={homepageUrl} target=\"_black\" rel=\"noopener\">\n                View\n              </a>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { HTMLProps, useCallback, useRef, useState } from 'react';\nimport { GithubPreview } from './GithubPreview';\nimport { LinkButton } from './LinkButton';\nimport { useGitRepos } from '../hooks/useGitRepos';\nimport { useIntersectionObserver } from '../hooks/useIntersectionObserver';\n\ninterface Props extends Omit<HTMLProps<HTMLDivElement>, 'title'> {\n  title?: boolean;\n  showLimit?: number;\n  showLoadMore?: boolean;\n  loadMoreText?: string;\n  autoLoadMore?: boolean;\n  tag?: string;\n}\n\nexport const Experiments: React.FC<Props> = ({\n  title = false,\n  showLimit = 6,\n  showLoadMore = true,\n  loadMoreText = 'Load more',\n  autoLoadMore = true,\n  tag,\n  ...props\n}) => {\n  const gitRepos = useGitRepos({ tag });\n  const [limit, setLimit] = useState(showLimit);\n  const visibleRepos = gitRepos.slice(0, limit || gitRepos.length);\n  const increaseLimit = useCallback(() => {\n    if (limit < gitRepos.length) setLimit((limit) => limit + showLimit);\n  }, [limit, gitRepos.length, showLimit]);\n  const ref = useRef<HTMLDivElement>(null);\n  useIntersectionObserver({\n    target: ref,\n    onIntersect: increaseLimit,\n    enabled: autoLoadMore,\n  });\n\n  return (\n    <div {...props}>\n      {title && <h2 className=\"font-medium\">Experiments</h2>}\n      <div className=\"mt-2 grid md:grid-cols-2 xl:grid-cols-3 gap-4\">\n        {visibleRepos.map((repo, i) => (\n          <GithubPreview key={i} data={repo} className=\"flex\" />\n        ))}\n      </div>\n      {showLoadMore && visibleRepos.length < gitRepos.length && (\n        <div ref={ref} className=\"mr-4 text-right\">\n          <LinkButton onClick={increaseLimit}>{loadMoreText}</LinkButton>\n        </div>\n      )}\n      {gitRepos.length === 0 && <div>...</div>}\n    </div>\n  );\n};\n","import React, { HTMLProps } from 'react';\n\ninterface Props extends Omit<HTMLProps<HTMLButtonElement>, \"className\" | \"type\"> {};\n\nexport const LinkButton: React.FC<Props> = ({ children, ...props }) => (\n  <button\n    className=\"p-0 bg-opacity-0 hover:bg-opacity-0 active:bg-opacity-0 focus:shadow-none text-sky-600 hover:text-sky-800\"\n    {...props}\n  >\n    {children}\n  </button>\n);\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { useMemo } from 'react';\nimport { unCamelCase, singleSpace, titleCase } from '../utils';\nimport { GraphqlGithubAll, RepoInfo } from '../components/Types';\n\nconst formatName: (string) => string  = (name) =>\n  titleCase(singleSpace(unCamelCase(name.replace(/[-_]/g, ' '))));\n\ninterface Props {\n  tag?: string;\n  name?: string;\n};\n\nexport const useGitRepos = ({ tag, name }: Props) => {\n  const data = useStaticQuery<GraphqlGithubAll>(\n    graphql`\n      query {\n        allGitReposJson {\n          nodes {\n            name\n            showName\n            tags\n          }\n        }\n        github {\n          repositoryOwner(login: \"renato145\") {\n            repositories(\n              last: 100\n              orderBy: { field: UPDATED_AT, direction: ASC }\n            ) {\n              nodes {\n                name\n                homepageUrl\n                url\n                updatedAt\n                openGraphImageUrl\n                description\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n  const allRepos = data.github.repositoryOwner.repositories.nodes;\n  const gitRepos = data.allGitReposJson.nodes;\n\n  const repos: RepoInfo[] = useMemo(() => {\n    let data: any = [];\n    gitRepos.forEach((d) => {\n      if (name && d.name !== name) return;\n      if (tag && d.tags.indexOf(tag) === -1) return;\n      const repoInfo = { ...allRepos.find((o) => o.name === d.name) };\n      const repo = Object.assign(repoInfo, d);\n      const url = repo['openGraphImageUrl'];\n      if (url.indexOf('https://repository-images') > -1) repo['imgUrl'] = url;\n      repo['name'] = repo['showName']\n        ? repo['showName']\n        : formatName(repo['name']);\n      data.push(repo);\n    });\n\n    return data;\n  }, [allRepos, gitRepos, tag, name]);\n\n  return repos;\n};\n","import React from 'react';\nimport { useEffect } from 'react';\n\ninterface Props extends IntersectionObserverInit {\n  target: React.RefObject<HTMLElement>;\n  onIntersect: () => void;\n  enabled?: boolean;\n}\n\nexport const useIntersectionObserver: (props: Props) => void = ({\n  target,\n  onIntersect,\n  enabled = true,\n  root,\n  rootMargin = '0px',\n  threshold = 1.0,\n}) => {\n  useEffect(() => {\n    if (!enabled) return;\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => entry.isIntersecting && onIntersect());\n      },\n      {\n        root,\n        rootMargin,\n        threshold,\n      }\n    );\n\n    const el = target && target.current;\n    if (!el) return;\n\n    observer.observe(el);\n\n    return () => observer.unobserve(el);\n  }, [target.current, enabled]);\n};\n","import React from 'react';\nimport { Layout } from '../components/Layout';\nimport { Experiments } from '../components/Experiments';\nimport { PageProps } from 'gatsby';\n\nconst ExperimentIndex: React.FC<PageProps> = ({ location }) => {\n  const title = 'Experiments';\n\n  return (\n    <Layout\n      location={location}\n      title={title}\n      description='Playground, experiments, random codes...'\n      headerConfig={{ title }}\n    >\n      <Experiments showLimit={9} />\n    </Layout>\n  );\n};\n\nexport default ExperimentIndex;\n"],"names":["GithubPreview","data","props","homepageUrl","url","imgUrl","name","tags","description","updatedAt","className","href","target","rel","src","alt","formatRelativeDate","Date","TagList","linkClassName","Experiments","title","showLimit","showLoadMore","loadMoreText","autoLoadMore","tag","gitRepos","useGitRepos","useState","limit","setLimit","visibleRepos","slice","length","increaseLimit","useCallback","ref","useRef","useIntersectionObserver","onIntersect","enabled","map","repo","i","key","LinkButton","onClick","children","useStaticQuery","allRepos","github","repositoryOwner","repositories","nodes","allGitReposJson","repos","useMemo","forEach","d","indexOf","repoInfo","find","o","Object","assign","titleCase","singleSpace","unCamelCase","replace","formatName","push","root","rootMargin","threshold","useEffect","observer","IntersectionObserver","entries","entry","isIntersecting","el","current","observe","unobserve","location","headerConfig"],"sourceRoot":""}