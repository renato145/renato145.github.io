{"version":3,"file":"component---src-pages-about-tsx-5c8c002d671fb53cd990.js","mappings":"kKAGaA,EAAkB,WAiB7B,OAhBqBC,EAAAA,EAAAA,gBAAc,cAcjCC,oBAAoBC,Q,2KCFlBC,EAA0C,SAAC,GAAD,IAC9CC,EAD8C,EAC9CA,QACAC,EAF8C,EAE9CA,MACAC,EAH8C,EAG9CA,WACAC,EAJ8C,EAI9CA,IACGC,GAL2C,mBAO9C,qBAAQA,EACLJ,EADH,IACY,wBAAMK,UAAU,eAAhB,IAAgCJ,EAAhC,KADZ,IAC4DC,EACzDC,GACC,gCACG,SACD,qBAAGG,KAAI,mBAAqBH,EAAOI,OAAO,SAASC,IAAI,YACpDL,MA2EX,EAhE+B,SAAC,GAAuB,IAArBM,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAEtC,EAAyBD,EAAKE,KAAKC,aAA3BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,KACVC,GCvCOnB,EAAAA,EAAAA,gBAAc,aAWzBoB,YAAYlB,MD6BRmB,GAAetB,EAAAA,EAAAA,KACfuB,GEzCgBtB,EAAAA,EAAAA,gBAAc,cAWlCuB,qBAAqBrB,MFgCvB,OACE,gBAACsB,EAAA,EAAD,CACEV,SAAUA,EACVT,MAAM,WAENoB,aAAc,CAAEpB,MAXN,UAaV,uBAAKI,UAAU,oBACb,wCACeQ,EADf,iNAOA,yJAKA,iKAEkE,IAChE,qBAAGP,KAAI,UAAYQ,GAASA,GAH9B,KAMA,+CACqB,gBAAC,EAAAQ,KAAD,CAAMC,GAAE,OAAR,QADrB,KAIA,kCACA,0BACGR,EAAKS,KAAI,WAAiBC,GAAjB,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACR,sBAAIC,IAAKH,IACNI,EAAAA,EAAAA,IAAaF,EAAM,aADtB,KACsCD,OAK1C,0CACA,0BACGT,EAAaO,KAAI,SAACM,EAAGL,GAAJ,OAChB,gBAAC1B,EAAD,eAAa6B,IAAKH,GAAOK,QAI7B,2CACA,0BACGZ,EAAcM,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACjB,sBAAIE,IAAKH,GAAIC","sources":["webpack://renato-hermoza/./src/hooks/usePublications.tsx","webpack://renato-hermoza/./src/pages/about.tsx","webpack://renato-hermoza/./src/hooks/useNews.tsx","webpack://renato-hermoza/./src/hooks/usePresentations.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\nimport { PublicationsAll } from '../Types';\n\nexport const usePublications = () => {\n  const publications = useStaticQuery<PublicationsAll>(\n    graphql`\n      query {\n        allPublicationsJson {\n          nodes {\n            authors\n            conference\n            doi\n            title\n            year\n          }\n        }\n      }\n    `\n  ).allPublicationsJson.nodes;\n\n  return publications;\n};\n","import React, { HTMLProps } from 'react';\nimport { graphql, Link, PageProps } from 'gatsby';\nimport { Layout } from '../components/Layout';\nimport { formatYMDate } from '../utils';\nimport {\n  GraphqlSite,\n  Publication as PublicationType,\n} from '../Types';\nimport { usePublications } from '../hooks/usePublications';\nimport { useNews } from '../hooks/useNews';\nimport { usePresentations } from '../hooks/usePresentations';\n\ninterface PublicationProps\n  extends Omit<HTMLProps<HTMLLIElement>, 'title'>,\n    PublicationType {}\n\nconst Publication: React.FC<PublicationProps> = ({\n  authors,\n  title,\n  conference,\n  doi,\n  ...props\n}) => (\n  <li {...props}>\n    {authors} <span className=\"font-medium\">“{title}”</span> {conference}\n    {doi && (\n      <>\n        {' DOI: '}\n        <a href={`https://doi.org/${doi}`} target=\"_black\" rel=\"noopener\">\n          {doi}\n        </a>\n      </>\n    )}\n  </li>\n);\n\ninterface Props extends PageProps {\n  data: GraphqlSite;\n}\n\nconst About: React.FC<Props> = ({ data, location }) => {\n  const title = 'About';\n  const { author, mail } = data.site.siteMetadata;\n  const news = useNews();\n  const publications = usePublications();\n  const presentations = usePresentations();\n\n  return (\n    <Layout\n      location={location}\n      title=\"About me\"\n      // description={title}\n      headerConfig={{ title }}\n    >\n      <div className=\"prose max-w-none\">\n        <p>\n          Hi! this is {author}. I'm in the final year of PhD at the University\n          of Adelaide, my work focuses on applying machine learning to medical\n          images and currently working on survival prediction and weakly\n          supervised localization.\n        </p>\n\n        <p>\n          Things I'm interested in no particular order: machine learning: data\n          visualization, optimization, simulation, open source...\n        </p>\n\n        <p>\n          I'm always up to apply my knowledge on impactful and social projects.\n          If you are interested in doing a collaboration, send me a mail:{' '}\n          <a href={`mailto:${mail}`}>{mail}</a>.\n        </p>\n\n        <p>\n          You can find my CV <Link to={`/cv`}>here</Link>.\n        </p>\n\n        <h2>News</h2>\n        <ul>\n          {news.map(({ text, date }, i) => (\n            <li key={i}>\n              {formatYMDate(date, 'MMMM yyyy')}: {text}\n            </li>\n          ))}\n        </ul>\n\n        <h2>Publications</h2>\n        <ul>\n          {publications.map((o, i) => (\n            <Publication key={i} {...o} />\n          ))}\n        </ul>\n\n        <h2>Presentations</h2>\n        <ul>\n          {presentations.map(({ text }, i) => (\n            <li key={i}>{text}</li>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default About;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author\n        mail\n      }\n    }\n  }\n`;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { NewsAll } from '../Types';\n\nexport const useNews = () => {\n  const news = useStaticQuery<NewsAll>(\n    graphql`\n      query {\n        allNewsJson {\n          nodes {\n            date\n            text\n          }\n        }\n      }\n    `\n  ).allNewsJson.nodes;\n\n  return news;\n};\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { PresentationsAll } from '../Types';\n\nexport const usePresentations = () => {\n  const presentations = useStaticQuery<PresentationsAll>(\n    graphql`\n      query {\n        allPresentationsJson {\n          nodes {\n            date\n            text\n          }\n        }\n      }\n    `\n  ).allPresentationsJson.nodes;\n\n  return presentations;\n};\n"],"names":["usePublications","useStaticQuery","allPublicationsJson","nodes","Publication","authors","title","conference","doi","props","className","href","target","rel","data","location","site","siteMetadata","author","mail","news","allNewsJson","publications","presentations","allPresentationsJson","Layout","headerConfig","Link","to","map","i","text","date","key","formatYMDate","o"],"sourceRoot":""}