{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/hooks/useOnScrollEnd.tsx","webpack:///./src/hooks/useOnNoScrollLoad.tsx","webpack:///./src/components/PostPreview.tsx","webpack:///./src/components/Posts.tsx","webpack:///(webpack)/buildin/module.js","webpack:///./src/components/LinkButton.tsx"],"names":["BlogIndex","data","location","posts","allMdx","edges","title","headerConfig","showLimit","pageQuery","useOnScrollEnd","cb","useEffect","throttleCb","throttle","f","scrollNode","document","scrollingElement","documentElement","scrollContainerBottomPosition","Math","round","scrollTop","window","innerHeight","scrollHeight","addEventListener","removeEventListener","useOnNoScrollLoad","observe","useCallback","PostPreview","node","props","postTitle","frontmatter","fields","slug","tags","to","className","date","TagList","dangerouslySetInnerHTML","__html","description","excerpt","Posts","showLoadMore","loadMoreText","autoLoadMore","useState","limit","setLimit","visiblePosts","slice","length","increaseLimit","map","key","LinkButton","onClick","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i"],"mappings":"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","file":"component---src-pages-blog-tsx-375240e08b93e86d906f.js","sourcesContent":["import React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport { Layout } from '../components/Layout';\nimport { Posts } from '../components/Posts';\nimport { MdxAllNodes } from '../components/Types';\n\ninterface Props extends PageProps {\n  data: MdxAllNodes;\n}\n\nconst BlogIndex: React.FC<Props> = ({ data, location }) => {\n  const title = 'Blog';\n  const posts = data.allMdx.edges;\n\n  return (\n    <Layout\n      location={location}\n      title={title}\n      // description={title}\n      headerConfig={{ title }}\n    >\n      <Posts posts={posts} showLimit={3} />\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { throttle } from 'lodash';\n\nexport const useOnScrollEnd = (cb: () => void) => {\n  useEffect(() => {\n    const throttleCb = throttle(cb, 200);\n    const f = () => {\n      const scrollNode = document.scrollingElement || document.documentElement;\n      const scrollContainerBottomPosition = Math.round(\n        scrollNode.scrollTop + window.innerHeight\n      );\n      const scrollPosition = Math.round(scrollNode.scrollHeight);\n\n      if (scrollPosition === scrollContainerBottomPosition) {\n        throttleCb();\n      }\n    };\n    window.addEventListener('scroll', f);\n\n    return () => {\n      window.removeEventListener('scroll', f);\n    };\n  }, [cb]);\n};\n","import { useCallback, useEffect } from 'react';\nimport { throttle } from 'lodash';\n\nexport const useOnNoScrollLoad = (cb: () => void, observe: any) => {\n  const throttleCb = useCallback(\n    throttle(() => {\n      cb();\n    }, 200),\n    [cb]\n  );\n\n  useEffect(() => {\n    if (document.documentElement.scrollHeight === window.innerHeight){\n      throttleCb();\n    }\n  }, [throttleCb, observe]);\n};\n","import React, { HTMLProps } from 'react';\nimport { Link } from 'gatsby';\nimport { TagList } from './TagList';\nimport { MdxNode } from './Types';\n\ninterface Props extends HTMLProps<HTMLDivElement> {\n  node: MdxNode;\n}\n\nexport const PostPreview: React.FC<Props> = ({ node, ...props }) => {\n  const postTitle = node.frontmatter.title || node.fields.slug;\n  const tags = node.frontmatter.tags;\n\n  return (\n    <div {...props}>\n      <div>\n        <Link to={node.fields.slug} className=\"text-xl font-medium\">\n          {postTitle}\n        </Link>\n      </div>\n      <div className=\"flex text-xs text-gray-600\">\n        <p>{node.frontmatter.date}</p>\n        <p className=\"px-1\">-</p>\n        <TagList tags={tags} />\n      </div>\n      <p\n        className=\"mt-1\"\n        dangerouslySetInnerHTML={{\n          __html: node.frontmatter.description || node.excerpt,\n        }}\n      />\n    </div>\n  );\n};\n","import React, { HTMLProps, useCallback, useEffect, useState } from 'react';\nimport { PostPreview } from './PostPreview';\nimport { LinkButton } from './LinkButton';\nimport { MdxNode, NodesOf } from './Types';\nimport { useOnScrollEnd } from '../hooks/useOnScrollEnd';\nimport { useOnNoScrollLoad } from '../hooks/useOnNoScrollLoad';\n\ninterface Props extends Omit<HTMLProps<HTMLDivElement>, 'title'> {\n  title?: boolean;\n  showLimit?: number;\n  showLoadMore?: boolean;\n  loadMoreText?: string;\n  autoLoadMore?: boolean;\n  posts: NodesOf<MdxNode>;\n}\n\nexport const Posts: React.FC<Props> = ({\n  title = false,\n  showLimit = 6,\n  showLoadMore = true,\n  loadMoreText = 'Load more',\n  autoLoadMore = true,\n  posts,\n  ...props\n}) => {\n  const [limit, setLimit] = useState(showLimit);\n  const visiblePosts = posts.slice(0, limit || posts.length);\n  const increaseLimit = useCallback(() => {\n    if (limit < posts.length) setLimit((limit) => limit + showLimit);\n  }, [posts.length, showLimit]);\n\n  useOnNoScrollLoad(increaseLimit, limit);\n  if (autoLoadMore) useOnScrollEnd(increaseLimit);\n\n  return (\n    <div {...props}>\n      {title && <h2 className=\"font-medium\">Posts</h2>}\n      <div className=\"mt-2 flex flex-wrap\">\n        {visiblePosts.map(({ node }) => (\n          <PostPreview\n            node={node}\n            key={node.fields.slug}\n            className=\"w-full lg:w-1/2 mb-4\"\n          />\n        ))}\n      </div>\n      {showLoadMore && visiblePosts.length < posts.length && (\n        <div className=\"mt-0 ml-2\">\n          <LinkButton onClick={() => setLimit((limit) => limit + showLimit)}>\n            {loadMoreText}\n          </LinkButton>\n        </div>\n      )}\n      {posts.length === 0 && <div>...</div>}\n    </div>\n  );\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React, { HTMLProps } from 'react';\n\ninterface Props extends Omit<HTMLProps<HTMLButtonElement>, \"className\" | \"type\"> {};\n\nexport const LinkButton: React.FC<Props> = ({ children, ...props }) => (\n  <button\n    className=\"p-0 bg-opacity-0 hover:bg-opacity-0 active:bg-opacity-0 focus:shadow-none text-blue-600 hover:text-blue-800\"\n    {...props}\n  >\n    {children}\n  </button>\n);\n"],"sourceRoot":""}