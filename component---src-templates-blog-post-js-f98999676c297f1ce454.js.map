{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/components/PostFooter.js","webpack:///./src/components/Utterances.js","webpack:///./src/components/Comments.js","webpack:///./src/templates/blog-post.js"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","Nav","styled","_Nav","previous","PostFooter","next","Item","to","fields","slug","rel","frontmatter","title","Utterances","forwardRef","ref","repo","useState","status","setStatus","useEffect","script","document","createElement","onload","onerror","async","src","setAttribute","elem","current","appendChild","firstChild","removeChild","Comments","useRef","site","siteMetadata","git","className","pageQuery","BlogPostTemplate","data","pageContext","location","excerpt","body","Layout","description","date","headerConfig","tags"],"mappings":"iFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,weC7BF,IAAMS,EAAMC,YAAOC,IAAPD,CAAH,KACY,qBAAEE,SAAyB,gBAAkB,cA0BnDC,EArBI,SAAC,GAAwB,IAAtBD,EAAqB,EAArBA,SAAUE,EAAW,EAAXA,KAC9B,OACE,kBAAC,EAAD,CAAKF,SAAUA,GACZA,GACC,kBAAC,EAAIG,KAAL,KACE,kBAAC,OAAD,CAAMC,GAAIJ,EAASK,OAAOC,KAAMC,IAAI,QAApC,KACKP,EAASQ,YAAYC,QAI7BP,GACC,kBAAC,EAAIC,KAAL,KACE,kBAAC,OAAD,CAAMC,GAAIF,EAAKG,OAAOC,KAAMC,IAAI,QAC7BL,EAAKM,YAAYC,MADpB,S,YCWKC,EAhCIC,sBAAW,WAAWC,GAAS,IAAjBC,EAAgB,EAAhBA,KAAgB,EACnBC,mBAAS,WAA9BC,EADwC,KAChCC,EADgC,KAuB/C,OApBAC,qBAAU,WACR,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,OAAS,kBAAML,EAAU,YAChCE,EAAOI,QAAU,kBAAMN,EAAU,WACjCE,EAAOK,OAAQ,EACfL,EAAOM,IAAM,gCACbN,EAAOO,aAAa,OAAQZ,GAC5BK,EAAOO,aAAa,aAAc,YAClCP,EAAOO,aAAa,QAAS,QAC7BP,EAAOO,aAAa,QAAS,gBAC7BP,EAAOO,aAAa,cAAe,aACnC,IAAMC,EAAOd,EAAIe,QAEjB,OADAD,EAAKE,YAAYV,GACV,WACL,KAAOQ,EAAKG,YACVH,EAAKI,YAAYJ,EAAKG,eAGzB,CAACjB,EAAKC,IAGP,6BACc,WAAXE,GAAuB,yDACZ,YAAXA,GAAwB,kDACzB,yBAAKH,IAAKA,QCHDmB,G,UArBE,WACf,IAAMnB,EAAMoB,mBACNnB,EAAO,OAUXoB,KAAKC,aAAaC,IAEpB,OACE,yBAAKC,UAAU,sBACb,kBAAC,EAAD,CAAYvB,KAAMA,EAAMD,IAAKA,OCmBtByB,G,UAFEC,UA9BU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAAe,EACrBF,EAAKzD,IAApC4D,EADoD,EACpDA,QAASlC,EAD2C,EAC3CA,YAAamC,EAD8B,EAC9BA,KACtB3C,EAAmBwC,EAAnBxC,SAAUE,EAASsC,EAATtC,KAElB,OACE,kBAAC0C,EAAA,EAAD,CACEH,SAAUA,EACVhC,MAAOD,EAAYC,MACnBoC,YAAarC,EAAYsC,KACzBC,aAAc,CACZtC,MAAOD,EAAYC,MACnBoC,YAAarC,EAAYqC,aAAeH,GAE1CM,KAAMxC,EAAYwC,MAElB,iCACE,kBAAC,cAAD,KAAcL,IAGhB,kBAAC,EAAD,CACE3C,SAAUA,EACVE,KAAMA,IAGR,kBAAC,EAAD,QAQgB","file":"component---src-templates-blog-post-js-f98999676c297f1ce454.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from 'react';\nimport { Nav as _Nav } from 'react-bootstrap';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst Nav = styled(_Nav)`\n  justify-content: ${({previous}) => previous ? \"space-between\" : \"flex-end\"};\n  margin-top: 2.5rem;\n`;\n\n\nconst PostFooter = ({ previous, next }) => {\n  return (\n    <Nav previous={previous}>\n      {previous && (\n        <Nav.Item>\n          <Link to={previous.fields.slug} rel='prev'>\n            ← {previous.frontmatter.title}\n          </Link>\n        </Nav.Item>\n      )}\n      {next && (\n        <Nav.Item>\n          <Link to={next.fields.slug} rel='next'>\n            {next.frontmatter.title} →\n          </Link>\n        </Nav.Item>\n      )}\n    </Nav>\n  );\n};\n\nexport default PostFooter;\n","import React, { useEffect, forwardRef, useState } from 'react';\n\nconst Utterances = forwardRef(({ repo }, ref) => {\n  const [status, setStatus] = useState('pending');\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.onload = () => setStatus('success');\n    script.onerror = () => setStatus('failed');\n    script.async = true;\n    script.src = 'https://utteranc.es/client.js';\n    script.setAttribute('repo', repo);\n    script.setAttribute('issue-term', 'pathname');\n    script.setAttribute('label', 'blog');\n    script.setAttribute('theme', 'github-light');\n    script.setAttribute('crossorigin', 'anonymous');\n    const elem = ref.current;\n    elem.appendChild(script);\n    return () => {\n      while (elem.firstChild) {\n        elem.removeChild(elem.firstChild);\n      }\n    };\n  }, [ref, repo]);\n\n  return (\n    <div>\n      {status === 'failed' && <div>Error. Please try again.</div>}\n      {status === 'pending' && <div>Loading script...</div>}\n      <div ref={ref} />\n    </div>\n  );\n});\n\nexport default Utterances;\n","import React, { useRef } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Utterances from './Utterances';\nimport './Comments.css';\n\nconst Comments = () => {\n  const ref = useRef();\n  const repo = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            git\n          }\n        }\n      }\n    `\n  ).site.siteMetadata.git;\n\n  return (\n    <div className='comments-container'>\n      <Utterances repo={repo} ref={ref}/>\n    </div>\n  );\n};\n\nexport default Comments;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport Layout from '../components/Layout';\nimport PostFooter from '../components/PostFooter';\nimport Comments from '../components/Comments';\nimport './blog-post.css';\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const { excerpt, frontmatter, body } = data.mdx;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout\n      location={location}\n      title={frontmatter.title}\n      description={frontmatter.date}\n      headerConfig={{\n        title: frontmatter.title,\n        description: frontmatter.description || excerpt,\n      }}\n      tags={frontmatter.tags}\n    >\n      <article>\n        <MDXRenderer>{body}</MDXRenderer>\n      </article>\n\n      <PostFooter\n        previous={previous}\n        next={next}\n      />\n\n      <Comments />\n\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      body\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}