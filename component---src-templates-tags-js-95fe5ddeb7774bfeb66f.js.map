{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/GithubPreview.js","webpack:///./src/components/Experiments.js","webpack:///./src/components/LinkButton.js","webpack:///./src/components/useGitRepos.js","webpack:///./src/components/utils.js","webpack:///./src/components/PostPreview.js","webpack:///./src/components/Posts.js"],"names":["TagsTemplate","pageContext","data","location","tag","posts","allMdx","edges","title","headerConfig","className","pageQuery","GithubPreview","props","homepageUrl","url","imgUrl","name","tags","description","updatedAt","href","target","rel","src","alt","moment","calendar","sameElse","TagList","Experiments","showLimit","showLoadMore","loadMoreText","gitRepos","useGitRepos","useState","limit","setLimit","visibleRepos","slice","length","map","repo","i","key","LinkButton","onClick","children","useStaticQuery","allRepos","github","repositoryOwner","repositories","nodes","allGitReposJson","useMemo","forEach","d","indexOf","repoInfo","find","o","Object","assign","str","toLowerCase","replace","toUpperCase","titleCase","singleSpace","formatName","push","PostPreview","node","postTitle","frontmatter","fields","slug","to","date","dangerouslySetInnerHTML","__html","excerpt","Posts","visiblePosts"],"mappings":"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","file":"component---src-templates-tags-js-95fe5ddeb7774bfeb66f.js","sourcesContent":["import React from 'react';\nimport { Layout } from '../components/Layout';\nimport { Posts } from '../components/Posts';\nimport { Experiments } from '../components/Experiments';\nimport { graphql } from 'gatsby';\n\nconst TagsTemplate = ({ pageContext, data, location }) => {\n  const { tag } = pageContext;\n  const posts = data.allMdx?.edges;\n\n  return (\n    <Layout\n      location={location}\n      title={tag}\n      // description='some description'\n      headerConfig={{ title: tag }}\n    >\n      <Posts posts={posts} title />\n      <hr className=\"mb-4\" />\n      <Experiments tag={tag} title />\n    </Layout>\n  );\n};\n\nexport default TagsTemplate;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport moment from 'moment';\nimport { TagList } from './TagList';\n\nexport const GithubPreview = ({ data, ...props }) => {\n  const { homepageUrl, url, imgUrl, name, tags, description, updatedAt } = data;\n\n  return (\n    <div {...props}>\n      <div className=\"w-full p-1 transition duration-150 rounded border shadow-sm hover:shadow-md\">\n        {imgUrl && (\n          <a href={homepageUrl || url} target=\"_black\" rel=\"noopener\">\n            <img className=\"\" src={imgUrl} alt={name} />\n          </a>\n        )}\n\n        <div className=\"mt-0 px-3 pb-2\">\n          <div>\n            {updatedAt && (\n              <small className=\"text-gray-600\">\n                Last updated:{' '}\n                {moment(updatedAt).calendar(null, {\n                  sameElse: 'DD/MM/YYYY',\n                })}\n              </small>\n            )}\n          </div>\n          <div className=\"text-xl font-semibold\">{name}</div>\n          <TagList className=\"text-xs\" tags={tags} />\n          <div className=\"mt-1\">{description}</div>\n          <div className=\"mt-4 flex flex-wrap justify-between\">\n            {url && (\n              <a href={url} target=\"_black\" rel=\"noopener\">\n                Go to code\n              </a>\n            )}\n            {homepageUrl && (\n              <a href={homepageUrl} target=\"_black\" rel=\"noopener\">\n                View\n              </a>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { GithubPreview } from './GithubPreview';\nimport { LinkButton } from './LinkButton';\nimport { useGitRepos } from './useGitRepos';\n\nexport const Experiments = ({\n  title = false,\n  showLimit = 6,\n  showLoadMore = true,\n  loadMoreText = 'Load more',\n  tag,\n  ...props\n}) => {\n  const gitRepos = useGitRepos({ tag });\n  const [limit, setLimit] = useState(showLimit);\n  const visibleRepos = gitRepos.slice(0, limit || gitRepos.length);\n\n  return (\n    <div {...props}>\n      {title && <h2 className=\"font-medium\">Experiments</h2>}\n      <div className=\"mt-2 flex flex-wrap items-stretch\">\n        {visibleRepos.map((repo, i) => (\n          <GithubPreview key={i} data={repo} className=\"flex flex-auto p-2 md:max-w-1/2 xl:max-w-1/3\" />\n        ))}\n      </div>\n      {showLoadMore && visibleRepos.length < gitRepos.length && (\n        <div className=\"mr-4 text-right\">\n          <LinkButton onClick={() => setLimit((limit) => limit + showLimit)}>\n            {loadMoreText}\n          </LinkButton>\n        </div>\n      )}\n      {gitRepos.length === 0 && <div>...</div>}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const LinkButton = ({ children, ...props }) => (\n  <button\n    className=\"p-0 bg-opacity-0 hover:bg-opacity-0 active:bg-opacity-0 focus:shadow-none text-blue-600 hover:text-blue-800\"\n    {...props}\n  >\n    {children}\n  </button>\n);\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { useMemo } from 'react';\nimport { unCamelCase, singleSpace, titleCase } from './utils';\n\nconst formatName = (name) =>\n  titleCase(singleSpace(unCamelCase(name.replace(/[-_]/g, ' '))));\n\nexport const useGitRepos = ({ tag, name }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allGitReposJson {\n          nodes {\n            name\n            showName\n            tags\n          }\n        }\n        github {\n          repositoryOwner(login: \"renato145\") {\n            repositories(\n              last: 100\n              orderBy: { field: UPDATED_AT, direction: DESC }\n            ) {\n              nodes {\n                name\n                homepageUrl\n                url\n                updatedAt\n                openGraphImageUrl\n                description\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n  const allRepos = data.github.repositoryOwner.repositories.nodes;\n  const gitRepos = data.allGitReposJson.nodes;\n\n  const repos = useMemo(() => {\n    let data = [];\n    gitRepos.forEach((d) => {\n      if (name && d.name !== name) return;\n      if (tag && d.tags.indexOf(tag) === -1) return;\n      const repoInfo = { ...allRepos.find((o) => o.name === d.name) };\n      const repo = Object.assign(repoInfo, d);\n      const url = repo['openGraphImageUrl'];\n      if (url.indexOf('https://repository-images') > -1) repo['imgUrl'] = url;\n      repo['name'] = repo['showName']\n        ? repo['showName']\n        : formatName(repo['name']);\n      data.push(repo);\n    });\n\n    return data;\n  }, [allRepos, gitRepos, tag, name]);\n\n  return repos;\n};\n","export const unCamelCase = str => str.replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0\\xDF])/g, \"$1 $2\").toLowerCase();\nexport const singleSpace = str => str.replace(/\\s+/g, ' ');\nexport const titleCase = str => str.toLowerCase().replace(/^\\w|\\s\\w/g, d => d.toUpperCase());\nexport const strJoin = (str, separator=', ') => str.reduce((o,acc) => `${o}${separator}${acc}`);\nexport const contains = (object, query) => {\n  if (object === null) return false;\n  if (typeof object === 'undefined') return false;\n  return object.indexOf(query) > -1;\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { TagList } from './TagList';\n\nexport const PostPreview = ({ node, ...props }) => {\n  const postTitle = node.frontmatter.title || node.fields.slug;\n  const tags = node.frontmatter.tags;\n\n  return (\n    <div {...props}>\n      <div>\n        <Link to={node.fields.slug} className=\"text-xl font-medium\">\n          {postTitle}\n        </Link>\n      </div>\n      <div className=\"flex text-xs text-gray-600\">\n        <p>{node.frontmatter.date}</p>\n        <p className=\"px-1\">-</p>\n        <TagList tags={tags} />\n      </div>\n      <p\n        className=\"mt-1\"\n        dangerouslySetInnerHTML={{\n          __html: node.frontmatter.description || node.excerpt,\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { PostPreview } from './PostPreview';\nimport { LinkButton } from './LinkButton';\n\nexport const Posts = ({\n  title = false,\n  showLimit = 6,\n  showLoadMore = true,\n  loadMoreText = 'Load more',\n  posts,\n  ...props\n}) => {\n  const [limit, setLimit] = useState(showLimit);\n  const visiblePosts = posts.slice(0, limit || posts.length);\n\n  return (\n    <div {...props}>\n      {title && <h2 className=\"font-medium\">Posts</h2>}\n      <div className=\"mt-2 flex flex-wrap\">\n        {visiblePosts.map(({ node }, i) => (\n          <PostPreview node={node} key={node.fields.slug} className=\"w-full lg:w-1/2 mb-4\" />\n          // <PostPreview node={node} key={node.fields.slug} className=\"w-full lg:max-w-sm mb-4\" />\n        ))}\n      </div>\n      {showLoadMore && visiblePosts.length < posts.length && (\n        <div className=\"mt-0 ml-2\">\n          <LinkButton onClick={() => setLimit((limit) => limit + showLimit)}>\n            {loadMoreText}\n          </LinkButton>\n        </div>\n      )}\n      {posts.length === 0 && <div>...</div>}\n    </div>\n  );\n};\n"],"sourceRoot":""}