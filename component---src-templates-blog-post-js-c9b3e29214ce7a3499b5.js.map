{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/components/PostFooter.js","webpack:///./src/components/Utteranc.js","webpack:///./src/components/Comments.js","webpack:///./src/templates/blog-post.js"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","PostFooter","previous","next","Nav","className","Item","to","fields","slug","rel","frontmatter","title","Utteranc","forwardRef","ref","useState","status","setStatus","useEffect","script","document","createElement","onload","onerror","async","src","setAttribute","current","appendChild","Comments","useRef","BlogPostTemplate","data","pageContext","location","excerpt","body","Layout","description","date","headerConfig","tags","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-c9b3e29214ce7a3499b5.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { Link } from 'gatsby';\nimport './PostFooter.css';\n\nconst PostFooter = ({ previous, next }) => {\n  return (\n    <Nav className='post-footer'>\n      {previous && (\n        <Nav.Item>\n          <Link to={previous.fields.slug} rel='prev'>\n            ← {previous.frontmatter.title}\n          </Link>\n        </Nav.Item>\n      )}\n      {next && (\n        <Nav.Item>\n          <Link to={next.fields.slug} rel='next'>\n            {next.frontmatter.title} →\n          </Link>\n        </Nav.Item>\n      )}\n    </Nav>\n  );\n};\n\nexport default PostFooter;\n","import React, { useEffect, forwardRef, useState } from 'react';\n\nexport const Utteranc = forwardRef( ( props, ref ) => {\n  const [ status, setStatus ] = useState('pending');\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.onload = () => setStatus('success');\n    script.onerror = () => setStatus('failed');\n    script.async = true;\n    script.src = 'https://utteranc.es/client.js';\n    script.setAttribute('repo', 'renato145/renato145.github.io');\n    script.setAttribute('issue-term', 'pathname');\n    script.setAttribute('label', 'blog');\n    script.setAttribute('theme', 'github-light');\n    script.setAttribute('crossorigin', 'anonymous');\n    ref.current.appendChild(script);\n  }, [ ref ])\n\n  return (\n    <div>\n      {status === 'failed' && <div>Error. Please try again.</div>}\n      {status === 'pending' && <div>Loading script...</div>}\n      <div ref={ref} />\n    </div>\n  );\n});\n","import React, { useRef } from 'react';\nimport { Utteranc } from './Utteranc';\nimport './Comments.css';\n\nconst Comments = () => {\n  const ref = useRef();\n\n  return (\n    <div className='comments-container'>\n      <Utteranc ref={ref}/>\n    </div>\n  );\n};\n\nexport default Comments;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport Layout from '../components/Layout';\nimport PostFooter from '../components/PostFooter';\nimport Comments from '../components/Comments';\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const { excerpt, frontmatter, body } = data.mdx;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout\n      location={location}\n      title={frontmatter.title}\n      description={frontmatter.date}\n      headerConfig={{\n        title: frontmatter.title,\n        description: frontmatter.description || excerpt,\n      }}\n      tags={frontmatter.tags}\n    >\n      <article>\n        <MDXRenderer>{body}</MDXRenderer>\n      </article>\n\n      <PostFooter\n        previous={previous}\n        next={next}\n      />\n\n      <Comments />\n\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      body\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}