{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/GithubPreview.js","webpack:///./src/components/Experiments.js","webpack:///./src/components/LinkButton.js","webpack:///./src/components/PostPreview.js","webpack:///./src/components/Posts.js"],"names":["Index","data","location","site","siteMetadata","title","description","posts","allMdx","edges","headerConfig","className","pageQuery","GithubPreview","props","homepageUrl","url","imgUrl","name","tags","updatedAt","href","target","rel","src","alt","moment","calendar","sameElse","TagList","Experiments","showLimit","showLoadMore","loadMoreText","tag","gitRepos","useGitRepos","useState","limit","setLimit","visibleRepos","slice","length","map","repo","i","key","LinkButton","onClick","children","PostPreview","node","postTitle","frontmatter","fields","slug","to","date","dangerouslySetInnerHTML","__html","excerpt","Posts","visiblePosts"],"mappings":"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","file":"component---src-pages-index-js-c2686912c14844025db3.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Layout } from '../components/Layout';\nimport { Posts } from '../components/Posts';\nimport { Experiments } from '../components/Experiments';\n\nconst Index = ({ data, location }) => {\n  const { title, description } = data.site.siteMetadata;\n  const posts = data.allMdx.edges;\n\n  return (\n    <Layout\n      location={location}\n      title={title}\n      description={description}\n      headerConfig={{ title: 'Home' }}\n    >\n      <Posts posts={posts} title />\n      <hr className=\"mt-6\" />\n      <Experiments className=\"mt-6\" title />\n    </Layout>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport moment from 'moment';\nimport { TagList } from './TagList';\n\nexport const GithubPreview = ({ data, ...props }) => {\n  const { homepageUrl, url, imgUrl, name, tags, description, updatedAt } = data;\n\n  return (\n    <div {...props}>\n      <div className=\"w-full p-1 transition duration-150 rounded border shadow-sm hover:shadow-md\">\n        {imgUrl && (\n          <a href={homepageUrl || url} target=\"_black\" rel=\"noopener\">\n            <img className=\"\" src={imgUrl} alt={name} />\n          </a>\n        )}\n\n        <div className=\"mt-0 px-3 pb-2\">\n          <div>\n            {updatedAt && (\n              <small className=\"text-gray-600\">\n                Last updated:{' '}\n                {moment(updatedAt).calendar(null, {\n                  sameElse: 'DD/MM/YYYY',\n                })}\n              </small>\n            )}\n          </div>\n          <div className=\"text-xl font-semibold\">{name}</div>\n          <TagList className=\"text-xs\" tags={tags} />\n          <div className=\"mt-1\">{description}</div>\n          <div className=\"mt-4 flex flex-wrap justify-between\">\n            {url && (\n              <a href={url} target=\"_black\" rel=\"noopener\">\n                Go to code\n              </a>\n            )}\n            {homepageUrl && (\n              <a href={homepageUrl} target=\"_black\" rel=\"noopener\">\n                View\n              </a>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { GithubPreview } from './GithubPreview';\nimport { LinkButton } from './LinkButton';\nimport { useGitRepos } from './useGitRepos';\n\nexport const Experiments = ({\n  title = false,\n  showLimit = 6,\n  showLoadMore = true,\n  loadMoreText = 'Load more',\n  tag,\n  ...props\n}) => {\n  const gitRepos = useGitRepos({ tag });\n  const [limit, setLimit] = useState(showLimit);\n  const visibleRepos = gitRepos.slice(0, limit || gitRepos.length);\n\n  return (\n    <div {...props}>\n      {title && <h2 className=\"font-medium\">Experiments</h2>}\n      <div className=\"mt-2 flex flex-wrap items-stretch\">\n        {visibleRepos.map((repo, i) => (\n          <GithubPreview key={i} data={repo} className=\"flex flex-auto p-2 md:max-w-1/2 xl:max-w-1/3\" />\n        ))}\n      </div>\n      {showLoadMore && visibleRepos.length < gitRepos.length && (\n        <div className=\"mr-4 text-right\">\n          <LinkButton onClick={() => setLimit((limit) => limit + showLimit)}>\n            {loadMoreText}\n          </LinkButton>\n        </div>\n      )}\n      {gitRepos.length === 0 && <div>...</div>}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const LinkButton = ({ children, ...props }) => (\n  <button\n    className=\"p-0 bg-opacity-0 hover:bg-opacity-0 active:bg-opacity-0 focus:shadow-none text-blue-600 hover:text-blue-800\"\n    {...props}\n  >\n    {children}\n  </button>\n);\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { TagList } from './TagList';\n\nexport const PostPreview = ({ node, ...props }) => {\n  const postTitle = node.frontmatter.title || node.fields.slug;\n  const tags = node.frontmatter.tags;\n\n  return (\n    <div {...props}>\n      <div>\n        <Link to={node.fields.slug} className=\"text-xl font-medium\">\n          {postTitle}\n        </Link>\n      </div>\n      <div className=\"flex text-xs text-gray-600\">\n        <p>{node.frontmatter.date}</p>\n        <p className=\"px-1\">-</p>\n        <TagList tags={tags} />\n      </div>\n      <p\n        className=\"mt-1\"\n        dangerouslySetInnerHTML={{\n          __html: node.frontmatter.description || node.excerpt,\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { PostPreview } from './PostPreview';\nimport { LinkButton } from './LinkButton';\n\nexport const Posts = ({\n  title = false,\n  showLimit = 6,\n  showLoadMore = true,\n  loadMoreText = 'Load more',\n  posts,\n  ...props\n}) => {\n  const [limit, setLimit] = useState(showLimit);\n  const visiblePosts = posts.slice(0, limit || posts.length);\n\n  return (\n    <div {...props}>\n      {title && <h2 className=\"font-medium\">Posts</h2>}\n      <div className=\"mt-2 flex flex-wrap\">\n        {visiblePosts.map(({ node }, i) => (\n          <PostPreview node={node} key={node.fields.slug} className=\"w-full lg:w-1/2 mb-4\" />\n          // <PostPreview node={node} key={node.fields.slug} className=\"w-full lg:max-w-sm mb-4\" />\n        ))}\n      </div>\n      {showLoadMore && visiblePosts.length < posts.length && (\n        <div className=\"mt-0 ml-2\">\n          <LinkButton onClick={() => setLimit((limit) => limit + showLimit)}>\n            {loadMoreText}\n          </LinkButton>\n        </div>\n      )}\n      {posts.length === 0 && <div>...</div>}\n    </div>\n  );\n};\n"],"sourceRoot":""}