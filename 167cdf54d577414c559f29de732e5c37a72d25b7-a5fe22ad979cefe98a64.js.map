{"version":3,"sources":["webpack:///./src/components/useGitRepos.js","webpack:///./src/components/utils.js"],"names":["useGitRepos","tag","data","allRepos","github","repositoryOwner","repositories","nodes","gitRepos","site","siteMetadata","useMemo","forEach","d","tags","indexOf","name","repoInfo","find","o","repo","Object","assign","url","str","toLowerCase","replace","toUpperCase","titleCase","push"],"mappings":"8/rBAIA,IAGaA,EAAc,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACtBC,EAAI,OAgCJC,EAAWD,EAAKE,OAAOC,gBAAgBC,aAAaC,MACpDC,EAAWN,EAAKO,KAAKC,aAAaF,SAmBxC,OAjBcG,mBAAQ,WACpB,IAAIT,EAAO,GAaX,OAZAM,EAASI,SAAQ,SAAAC,GACf,IAAIZ,IAAiC,IAAzBY,EAAEC,KAAKC,QAAQd,GAA3B,CACA,IA3Cae,EA2CPC,E,+VAAQ,IAAQd,EAASe,MAAK,SAAAC,GAAC,OAAIA,EAAEH,OAASH,EAAEG,SAChDI,EAAOC,OAAOC,OAAOL,EAAUJ,GAC/BU,EAAMH,EAAI,kBACZG,EAAIR,QAAQ,8BAAgC,IAAGK,EAAI,OAAaG,GACpEH,EAAI,KAAWA,EAAI,SACfA,EAAI,UAhDKJ,EAiDEI,EAAI,KCnDA,SAAAI,GAAG,OAAIA,EAAIC,cAAcC,QAAQ,aAAa,SAAAb,GAAC,OAAIA,EAAEc,iBDG5EC,CAAkCZ,EAAKU,QAAQ,QAAS,KCLpBA,QAAQ,mCAAoC,SAASD,cACrDC,QAAQ,OAAQ,ODqDhDxB,EAAK2B,KAAKT,OAGLlB,IACN,CAACC,EAAUK,EAAUP","file":"167cdf54d577414c559f29de732e5c37a72d25b7-a5fe22ad979cefe98a64.js","sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\nimport { useMemo } from 'react';\nimport { unCamelCase, singleSpace, titleCase } from './utils';\n\nconst formatName = name =>\n  titleCase(singleSpace(unCamelCase(name.replace(/[-_]/g, ' '))));\n\nexport const useGitRepos = ({ tag }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            gitRepos {\n              name\n              showName\n              tags\n            }\n          }\n        }\n        github {\n          repositoryOwner(login: \"renato145\") {\n            repositories(\n              last: 100\n              orderBy: { field: UPDATED_AT, direction: DESC }\n            ) {\n              nodes {\n                name\n                homepageUrl\n                url\n                updatedAt\n                openGraphImageUrl\n                description\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n  const allRepos = data.github.repositoryOwner.repositories.nodes;\n  const gitRepos = data.site.siteMetadata.gitRepos;\n\n  const repos = useMemo(() => {\n    let data = [];\n    gitRepos.forEach(d => {\n      if (tag && (d.tags.indexOf(tag) === -1)) return;\n      const repoInfo = { ...allRepos.find(o => o.name === d.name) };\n      const repo = Object.assign(repoInfo, d);\n      const url = repo['openGraphImageUrl'];\n      if (url.indexOf('https://repository-images') > -1) repo['imgUrl'] = url;\n      repo['name'] = repo['showName']\n        ? repo['showName']\n        : formatName(repo['name']);\n      data.push(repo);\n    });\n\n    return data;\n  }, [allRepos, gitRepos, tag]);\n\n  return repos;\n};\n","export const unCamelCase = str => str.replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0\\xDF])/g, \"$1 $2\").toLowerCase();\nexport const singleSpace = str => str.replace(/\\s+/g, ' ');\nexport const titleCase = str => str.toLowerCase().replace(/^\\w|\\s\\w/g, d => d.toUpperCase());\nexport const strJoin = (str, separator=', ') => str.reduce((o,acc) => `${o}${separator}${acc}`);\nexport const contains = (object, query) => {\n  if (object === null) return false;\n  if (typeof object === 'undefined') return false;\n  return object.indexOf(query) > -1;\n};\n"],"sourceRoot":""}