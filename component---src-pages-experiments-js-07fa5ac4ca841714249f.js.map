{"version":3,"sources":["webpack:///./src/components/GithubPreview.js","webpack:///./src/components/Experiments.js","webpack:///./src/pages/experiments.js"],"names":["GithubPreview","user","repo","useState","data","setData","useEffect","fetch","apiUrl","then","resolve","json","d","name","url","html_url","homepage","description","Experiments","repos","map","i","key","DefaultPage","location","gitUser","site","siteMetadata","social","github","Layout","title","headerConfig","pageQuery"],"mappings":"uIAkCeA,G,oBA7BO,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAAW,EACdC,qBAAlBC,EADgC,KAC1BC,EAD0B,KAexC,OAbAC,qBAAU,WACRC,MAASC,gCAAUP,EAAd,IAAsBC,GACxBO,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GACJP,EAAQ,CACNQ,KAAMD,EAAEC,KACRC,IAAKF,EAAEG,SACPC,SAAUJ,EAAEI,SACZC,YAAaL,EAAEK,mBAGpB,CAAEhB,EAAMC,IAGT,oCACIE,GACA,oCACE,2BAAG,2BAAIA,EAAKS,OACZ,2BAAIT,EAAKU,KACT,2BAAIV,EAAKY,UACT,2BAAIZ,EAAKa,iBCNJC,G,UAjBK,SAAC,GAAqB,IAAnBjB,EAAkB,EAAlBA,KAAMkB,EAAY,EAAZA,MAC3B,OACE,oCACGA,EAAMC,KAAI,SAAClB,EAAMmB,GAAP,OACT,oCACE,kBAAC,EAAD,CACEC,IAAKD,EACLpB,KAAMA,EACNC,KAAMA,IAER,oCCdV,0CAoCeqB,UA/BK,SAAC,GAAwB,IAAtBnB,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,SAiBrBC,EAAUrB,EAAKsB,KAAKC,aAAaC,OAAOC,OAE9C,OACE,kBAACC,EAAA,EAAD,CACEN,SAAUA,EACVO,MArBU,cAsBVd,YAAY,2CACZe,aAAc,CAAED,MAvBN,gBAyBV,kBAAC,EAAD,CAAa9B,KAAMwB,EAASN,MAxBlB,CACZ,iBACA,mBACA,SACA,cACA,MACA,cACA,4BACA,eACA,MACA,aACA,eACA,cACA,gBAfJ,IAiCac,EAAS","file":"component---src-pages-experiments-js-07fa5ac4ca841714249f.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GithubPreview.css';\n\nconst apiUrl = 'https://api.github.com/repos';\n\nconst GithubPreview = ({ user, repo }) => {\n  const [ data, setData ] = useState();\n  useEffect(() => {\n    fetch(`${apiUrl}/${user}/${repo}`)\n      .then(resolve => resolve.json())\n      .then(d => {\n        setData({\n          name: d.name,\n          url: d.html_url,\n          homepage: d.homepage,\n          description: d.description,\n        });\n      });\n  }, [ user, repo ]);\n\n  return (\n    <>\n      { data && (\n        <>\n          <p><b>{data.name}</b></p>\n          <p>{data.url}</p>\n          <p>{data.homepage}</p>\n          <p>{data.description}</p>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default GithubPreview;\n","import React from 'react';\nimport GithubPreview from './GithubPreview';\nimport './Experiments.css';\n\nconst Experiments = ({ user, repos }) => {\n  return (\n    <>\n      {repos.map((repo, i) => ( \n        <>\n          <GithubPreview\n            key={i}\n            user={user}\n            repo={repo}\n          />\n          <hr />\n        </>\n      ))}\n    </>\n  );\n}\n\nexport default Experiments;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Experiments from '../components/Experiments';\n\nconst DefaultPage = ({ data, location }) => {\n  const title = 'Experiments';\n  const repos = [\n    'show_evolution',\n    'show_evolution3d',\n    'd3sims',\n    'react_tests',\n    'gcn',\n    'parallel_ex',\n    'ClassificationUncertainty',\n    'fastai_scans',\n    'stn',\n    'peru-stats',\n    'bayesian-opt',\n    'waimlap2017',\n    '3D-ORGAN',\n  ];\n  const gitUser = data.site.siteMetadata.social.github;\n\n  return (\n    <Layout\n      location={location}\n      title={title}\n      description='Playground, experiments, random codes...'\n      headerConfig={{ title }}\n    >\n      <Experiments user={gitUser} repos={repos} />\n    </Layout>\n  );\n};\n\nexport default DefaultPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        social {\n          github\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}