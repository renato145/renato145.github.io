{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/construct.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./src/components/PostFooter.tsx","webpack:///./src/components/Utterances.tsx","webpack:///./src/components/Comments.tsx","webpack:///./src/templates/blog-post.js"],"names":["module","exports","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","MDXRenderer","require","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_setPrototypeOf","o","p","__proto__","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","fn","arrayLikeToArray","minLen","n","slice","constructor","name","Array","from","test","iter","Symbol","iterator","len","length","i","arr2","TypeError","isArray","PostFooter","previous","next","to","fields","slug","rel","frontmatter","title","Utterances","forwardRef","ref","repo","useState","status","setStatus","useEffect","script","document","createElement","onload","onerror","async","src","setAttribute","elem","current","appendChild","firstChild","removeChild","Comments","useRef","useStaticQuery","site","siteMetadata","git","className","pageQuery","BlogPostTemplate","data","pageContext","location","excerpt","body","Layout","description","date","headerConfig","tags"],"mappings":"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","file":"component---src-templates-blog-post-js-1fe582b1621036d99389.js","sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","import React, { HTMLProps } from 'react';\nimport { Link } from 'gatsby';\nimport { MdxNode } from './Types';\n\ninterface Props extends HTMLProps<HTMLDivElement> {\n  previous?: MdxNode;\n  next?: MdxNode;\n}\n\nexport const PostFooter: React.FC<Props> = ({ previous, next, ...props }) => {\n  return (\n    <div {...props}>\n      <div>\n      {previous && (\n          <Link to={previous.fields.slug} rel='prev'>\n            ← {previous.frontmatter.title}\n          </Link>\n      )}\n      </div>\n      <div>\n      {next && (\n          <Link to={next.fields.slug} rel='next'>\n            {next.frontmatter.title} →\n          </Link>\n      )}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, forwardRef, useState } from 'react';\n\ninterface Props {\n  repo: string;\n}\n\nconst Utterances = forwardRef<HTMLDivElement, Props>(\n  ({ repo }, ref: any ) => {\n    const [status, setStatus] = useState('pending');\n\n    useEffect(() => {\n      const script = document.createElement('script');\n      script.onload = () => setStatus('success');\n      script.onerror = () => setStatus('failed');\n      script.async = true;\n      script.src = 'https://utteranc.es/client.js';\n      script.setAttribute('repo', repo);\n      script.setAttribute('issue-term', 'pathname');\n      script.setAttribute('label', 'blog');\n      script.setAttribute('theme', 'github-light');\n      script.setAttribute('crossorigin', 'anonymous');\n      const elem = ref.current;\n      elem.appendChild(script);\n\n      return () => {\n        while (elem.firstChild) {\n          elem.removeChild(elem.firstChild);\n        }\n      };\n    }, [ref, repo]);\n\n    return (\n      <div>\n        {status === 'failed' && <div>Error. Please try again.</div>}\n        {status === 'pending' && <div>Loading script...</div>}\n        <div ref={ref} />\n      </div>\n    );\n  }\n);\n\nexport default Utterances;\n","import React, { useRef } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Utterances from './Utterances';\nimport { GraphqlSite } from './Types';\n\nexport const Comments: React.FC = () => {\n  const ref = useRef<HTMLDivElement>(null);\n  const repo = useStaticQuery<GraphqlSite>(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            git\n          }\n        }\n      }\n    `\n  ).site.siteMetadata.git;\n\n  return (\n    <div className=\"mt-6\">\n      <Utterances repo={repo} ref={ref} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { Layout } from '../components/Layout';\nimport { PostFooter } from '../components/PostFooter';\nimport { Comments } from '../components/Comments';\nimport './blog-post.css';\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const { excerpt, frontmatter, body } = data.mdx;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout\n      location={location}\n      title={frontmatter.title}\n      description={frontmatter.date}\n      headerConfig={{\n        title: frontmatter.title,\n        description: frontmatter.description || excerpt,\n      }}\n      tags={frontmatter.tags}\n    >\n\n      <div className=\"postContent\">\n        <MDXRenderer>{body}</MDXRenderer>\n      </div>\n\n      <PostFooter\n        className=\"mt-4 flex flex-wrap justify-between\"\n        previous={previous}\n        next={next}\n      />\n\n      <Comments />\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      body\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}