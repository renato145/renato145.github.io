{"version":3,"file":"component---src-pages-about-tsx-b91845b62f03bfa292b5.js","mappings":"kKAGaA,EAAkB,WAiB7B,OAhBqBC,EAAAA,EAAAA,gBAAAA,cAAAA,oBAArB,Q,2KCSIC,EAA0C,SAAC,GAAD,IAC9CC,EAD8C,UAE9CC,EAF8C,QAG9CC,EAH8C,aAI9CC,EAJ8C,MAK3CC,GAL2C,mBAO9C,6BACY,wBAAMC,UAAU,eAAhB,MADZ,WAEGF,GACC,yCAEE,qBAAGG,KAAI,mBAAP,EAAmCC,OAAnC,SAAmDC,IAAI,YAZf,MAoFhD,EA5D+B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAEtC,EAAyBD,EAAAA,KAAzB,aAAQE,EAAR,SAAgBC,EAAhB,OACMC,GCpCOf,EAAAA,EAAAA,gBAAAA,aAAAA,YAAb,MDqCMgB,GAAejB,EAAAA,EAAAA,KACfkB,GEtCgBjB,EAAAA,EAAAA,gBAAAA,cAAAA,qBAAtB,MFwCA,OACE,qBACEY,SADF,EAEET,MAFF,WAIEe,aAAc,CAAEf,MAXpB,UAaI,uBAAKI,UAAU,oBACb,0CADF,saAUE,kIAGE,qBAAGC,KAAH,4CAAoDC,OAApD,SAAoEC,IAAI,YAH1E,oCAMuB,qBAAGF,KAAI,UAAYM,GAN1C,GAVF,KAkBE,+CACqB,wBAAMK,GAAE,OAD7B,QAlBF,KAqBE,0BArBF,QAsBE,0BACGJ,EAAA,KAAS,kBAAGK,EAAH,OAASC,EAAT,cACR,sBAAIC,IAAKC,IACNC,EAAAA,EAAAA,IAAaH,EADhB,kBADQ,OAMZ,0BA7BF,gBA8BE,0BACGL,EAAA,KAAiB,qBAChB,iCAAaM,IAAKC,GADF,QAIpB,0BAnCF,iBAoCE,0BACGN,EAAA,KAAkB,kBAAGG,EAAH,cACjB,sBAAIE,IAAKC,GADQ","sources":["webpack://renato-hermoza/./src/hooks/usePublications.tsx","webpack://renato-hermoza/./src/pages/about.tsx","webpack://renato-hermoza/./src/hooks/useNews.tsx","webpack://renato-hermoza/./src/hooks/usePresentations.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\nimport { PublicationsAll } from '../Types';\n\nexport const usePublications = () => {\n  const publications = useStaticQuery<PublicationsAll>(\n    graphql`\n      query {\n        allPublicationsJson {\n          nodes {\n            authors\n            conference\n            doi\n            title\n            year\n          }\n        }\n      }\n    `\n  ).allPublicationsJson.nodes;\n\n  return publications;\n};\n","import React, { HTMLProps } from 'react';\nimport { graphql, Link, PageProps } from 'gatsby';\nimport { Layout } from '../components/Layout';\nimport { formatYMDate } from '../utils';\nimport { GraphqlSite, Publication as PublicationType } from '../Types';\nimport { usePublications } from '../hooks/usePublications';\nimport { useNews } from '../hooks/useNews';\nimport { usePresentations } from '../hooks/usePresentations';\n\ninterface PublicationProps\n  extends Omit<HTMLProps<HTMLLIElement>, 'title'>,\n    PublicationType {}\n\nconst Publication: React.FC<PublicationProps> = ({\n  authors,\n  title,\n  conference,\n  doi,\n  ...props\n}) => (\n  <li {...props}>\n    {authors} <span className=\"font-medium\">“{title}”</span> {conference}\n    {doi && (\n      <>\n        {' DOI: '}\n        <a href={`https://doi.org/${doi}`} target=\"_black\" rel=\"noopener\">\n          {doi}\n        </a>\n      </>\n    )}\n  </li>\n);\n\ninterface Props extends PageProps {\n  data: GraphqlSite;\n}\n\nconst About: React.FC<Props> = ({ data, location }) => {\n  const title = 'About';\n  const { author, mail } = data.site.siteMetadata;\n  const news = useNews();\n  const publications = usePublications();\n  const presentations = usePresentations();\n\n  return (\n    <Layout\n      location={location}\n      title=\"About me\"\n      // description={title}\n      headerConfig={{ title }}\n    >\n      <div className=\"prose max-w-none\">\n        <p>\n          Hi! this is {author}. I have PhD on Machine Learning from the\n          University of Adelaide, my work focused on applying machine learning\n          to medical images, survival prediction and weakly supervised\n          localization. My main research interests are in the fields of machine\n          learning, optimization, simulation and data visualization. I enjoy\n          building interactive systems for domain experts to explore complex\n          machine learning and optimization systems.\n        </p>\n        <p>\n          Would you like to talk about Python, Rust adoption, machine learning?\n          You can schedule 30 min talk{' '}\n          <a href=\"https://calendly.com/renato_hermoza/30min\" target=\"_black\" rel=\"noopener\">\n            here\n          </a>{' '}\n          or send me a mail to <a href={`mailto:${mail}`}>{mail}</a>.\n        </p>\n        <p>\n          You can find my CV <Link to={`/cv`}>here</Link>.\n        </p>\n        <h2>News</h2>\n        <ul>\n          {news.map(({ text, date }, i) => (\n            <li key={i}>\n              {formatYMDate(date, 'MMMM yyyy')}: {text}\n            </li>\n          ))}\n        </ul>\n        <h2>Publications</h2>\n        <ul>\n          {publications.map((o, i) => (\n            <Publication key={i} {...o} />\n          ))}\n        </ul>\n        <h2>Presentations</h2>\n        <ul>\n          {presentations.map(({ text }, i) => (\n            <li key={i}>{text}</li>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default About;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author\n        mail\n      }\n    }\n  }\n`;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { NewsAll } from '../Types';\n\nexport const useNews = () => {\n  const news = useStaticQuery<NewsAll>(\n    graphql`\n      query {\n        allNewsJson {\n          nodes {\n            date\n            text\n          }\n        }\n      }\n    `\n  ).allNewsJson.nodes;\n\n  return news;\n};\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { PresentationsAll } from '../Types';\n\nexport const usePresentations = () => {\n  const presentations = useStaticQuery<PresentationsAll>(\n    graphql`\n      query {\n        allPresentationsJson {\n          nodes {\n            date\n            text\n          }\n        }\n      }\n    `\n  ).allPresentationsJson.nodes;\n\n  return presentations;\n};\n"],"names":["usePublications","useStaticQuery","Publication","authors","title","conference","doi","props","className","href","target","rel","data","location","author","mail","news","publications","presentations","headerConfig","to","text","date","key","i","formatYMDate"],"sourceRoot":""}