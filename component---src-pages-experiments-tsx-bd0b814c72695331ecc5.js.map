{"version":3,"sources":["webpack:///./src/hooks/useGitRepos.tsx","webpack:///./src/components/utils.tsx","webpack:///./src/pages/experiments.tsx","webpack:///./src/hooks/useOnScrollEnd.tsx","webpack:///./src/hooks/useOnNoScrollLoad.tsx","webpack:///./src/components/GithubPreview.tsx","webpack:///./src/components/Experiments.tsx","webpack:///./src/components/LinkButton.tsx"],"names":["useGitRepos","tag","name","data","useStaticQuery","allRepos","github","repositoryOwner","repositories","nodes","gitRepos","allGitReposJson","useMemo","forEach","d","tags","indexOf","repoInfo","find","o","repo","Object","assign","url","str","toLowerCase","replace","toUpperCase","titleCase","singleSpace","formatName","push","ExperimentIndex","location","title","description","headerConfig","showLimit","useOnScrollEnd","cb","useEffect","throttleCb","throttle","f","scrollNode","document","scrollingElement","documentElement","scrollContainerBottomPosition","Math","round","scrollTop","window","innerHeight","scrollHeight","addEventListener","removeEventListener","useOnNoScrollLoad","observe","useCallback","GithubPreview","props","homepageUrl","imgUrl","updatedAt","className","href","target","rel","src","alt","moment","calendar","sameElse","TagList","linkClassName","Experiments","showLoadMore","loadMoreText","autoLoadMore","useState","limit","setLimit","visibleRepos","slice","length","increaseLimit","map","i","key","LinkButton","onClick","children"],"mappings":"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","file":"component---src-pages-experiments-tsx-bd0b814c72695331ecc5.js","sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\nimport { useMemo } from 'react';\nimport { unCamelCase, singleSpace, titleCase } from '../components/utils';\nimport { GraphqlGithubAll, GraphqlRepo, RepoInfo } from '../components/Types';\n\nconst formatName: (string) => string  = (name) =>\n  titleCase(singleSpace(unCamelCase(name.replace(/[-_]/g, ' '))));\n\ninterface Props {\n  tag?: string;\n  name?: string;\n};\n\nexport const useGitRepos = ({ tag, name }: Props) => {\n  const data = useStaticQuery<GraphqlGithubAll>(\n    graphql`\n      query {\n        allGitReposJson {\n          nodes {\n            name\n            showName\n            tags\n          }\n        }\n        github {\n          repositoryOwner(login: \"renato145\") {\n            repositories(\n              last: 100\n              orderBy: { field: UPDATED_AT, direction: DESC }\n            ) {\n              nodes {\n                name\n                homepageUrl\n                url\n                updatedAt\n                openGraphImageUrl\n                description\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n  const allRepos = data.github.repositoryOwner.repositories.nodes;\n  const gitRepos = data.allGitReposJson.nodes;\n\n  const repos: RepoInfo[] = useMemo(() => {\n    let data: any = [];\n    gitRepos.forEach((d) => {\n      if (name && d.name !== name) return;\n      if (tag && d.tags.indexOf(tag) === -1) return;\n      const repoInfo = { ...allRepos.find((o) => o.name === d.name) };\n      const repo = Object.assign(repoInfo, d);\n      const url = repo['openGraphImageUrl'];\n      if (url.indexOf('https://repository-images') > -1) repo['imgUrl'] = url;\n      repo['name'] = repo['showName']\n        ? repo['showName']\n        : formatName(repo['name']);\n      data.push(repo);\n    });\n\n    return data;\n  }, [allRepos, gitRepos, tag, name]);\n\n  return repos;\n};\n","export const unCamelCase = (str: string) =>\n  str.replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0\\xDF])/g, '$1 $2').toLowerCase();\n\nexport const singleSpace = (str: string) => str.replace(/\\s+/g, ' ');\n\nexport const titleCase = (str: string) =>\n  str.toLowerCase().replace(/^\\w|\\s\\w/g, (d) => d.toUpperCase());\n\nexport const strJoin = (str: string[], separator = ', ') =>\n  str.reduce((o, acc) => `${o}${separator}${acc}`);\n\nexport const contains = (object, query) => {\n  if (object === null) return false;\n  if (typeof object === 'undefined') return false;\n  return object.indexOf(query) > -1;\n};\n","import React from 'react';\nimport { Layout } from '../components/Layout';\nimport { Experiments } from '../components/Experiments';\nimport { PageProps } from 'gatsby';\n\nconst ExperimentIndex: React.FC<PageProps> = ({ location }) => {\n  const title = 'Experiments';\n\n  return (\n    <Layout\n      location={location}\n      title={title}\n      description='Playground, experiments, random codes...'\n      headerConfig={{ title }}\n    >\n      <Experiments showLimit={9} />\n    </Layout>\n  );\n};\n\nexport default ExperimentIndex;\n","import { useEffect } from 'react';\nimport { throttle } from 'lodash';\n\nexport const useOnScrollEnd = (cb: () => void) => {\n  useEffect(() => {\n    const throttleCb = throttle(cb, 200);\n    const f = () => {\n      const scrollNode = document.scrollingElement || document.documentElement;\n      const scrollContainerBottomPosition = Math.round(\n        scrollNode.scrollTop + window.innerHeight\n      );\n      const scrollPosition = Math.round(scrollNode.scrollHeight);\n\n      if (scrollPosition === scrollContainerBottomPosition) {\n        throttleCb();\n      }\n    };\n    window.addEventListener('scroll', f);\n\n    return () => {\n      window.removeEventListener('scroll', f);\n    };\n  }, [cb]);\n};\n","import { useCallback, useEffect } from 'react';\nimport { throttle } from 'lodash';\n\nexport const useOnNoScrollLoad = (cb: () => void, observe: any) => {\n  const throttleCb = useCallback(\n    throttle(() => {\n      cb();\n    }, 200),\n    [cb]\n  );\n\n  useEffect(() => {\n    if (document.documentElement.scrollHeight === window.innerHeight){\n      throttleCb();\n    }\n  }, [throttleCb, observe]);\n};\n","import React, { HTMLProps } from 'react';\nimport moment from 'moment';\nimport { TagList } from './TagList';\nimport { RepoInfo } from './Types';\n\ninterface Props extends Omit<HTMLProps<HTMLDivElement>, \"data\"> {\n  data: RepoInfo;\n}\n\nexport const GithubPreview: React.FC<Props> = ({ data, ...props }) => {\n  const { homepageUrl, url, imgUrl, name, tags, description, updatedAt } = data;\n\n  return (\n    <div {...props}>\n      <div className=\"w-full p-1 transition duration-150 rounded border shadow-sm hover:shadow-md\">\n        {imgUrl && (\n          <a href={homepageUrl || url} target=\"_black\" rel=\"noopener\">\n            <img className=\"\" src={imgUrl} alt={name} />\n          </a>\n        )}\n\n        <div className=\"mt-0 px-3 pb-2\">\n          <div>\n            {updatedAt && (\n              <small className=\"text-gray-600\">\n                Last updated:{' '}\n                {moment(updatedAt).calendar(null, {\n                  sameElse: 'DD/MM/YYYY',\n                })}\n              </small>\n            )}\n          </div>\n          <div className=\"text-xl font-semibold\">{name}</div>\n          <TagList linkClassName=\"text-xs\" tags={tags} />\n          <div className=\"mt-1\">{description}</div>\n          <div className=\"mt-4 flex flex-wrap justify-between\">\n            {url && (\n              <a href={url} target=\"_black\" rel=\"noopener\">\n                Go to code\n              </a>\n            )}\n            {homepageUrl && (\n              <a href={homepageUrl} target=\"_black\" rel=\"noopener\">\n                View\n              </a>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { HTMLProps, useCallback, useState } from 'react';\nimport { GithubPreview } from './GithubPreview';\nimport { LinkButton } from './LinkButton';\nimport { useGitRepos } from '../hooks/useGitRepos';\nimport { useOnScrollEnd } from '../hooks/useOnScrollEnd';\nimport { useOnNoScrollLoad } from '../hooks/useOnNoScrollLoad';\n\ninterface Props extends Omit<HTMLProps<HTMLDivElement>, \"title\"> {\n  title?: boolean;\n  showLimit?: number;\n  showLoadMore?: boolean;\n  loadMoreText?: string;\n  autoLoadMore?: boolean;\n  tag?: string;\n}\n\nexport const Experiments: React.FC<Props> = ({\n  title = false,\n  showLimit = 6,\n  showLoadMore = true,\n  loadMoreText = 'Load more',\n  autoLoadMore = true,\n  tag,\n  ...props\n}) => {\n  const gitRepos = useGitRepos({ tag });\n  const [limit, setLimit] = useState(showLimit);\n  const visibleRepos = gitRepos.slice(0, limit || gitRepos.length);\n  const increaseLimit = useCallback(() => {\n    if (limit < gitRepos.length) setLimit((limit) => limit + showLimit);\n  }, [limit, gitRepos.length, showLimit]);\n\n  useOnNoScrollLoad(increaseLimit, limit);\n  if (autoLoadMore) useOnScrollEnd(increaseLimit);\n\n  return (\n    <div {...props}>\n      {title && <h2 className=\"font-medium\">Experiments</h2>}\n      <div className=\"mt-2 flex flex-wrap items-stretch\">\n        {visibleRepos.map((repo, i) => (\n          <GithubPreview\n            key={i}\n            data={repo}\n            className=\"flex flex-auto p-2 md:max-w-1/2 xl:max-w-1/3\"\n          />\n        ))}\n      </div>\n      {showLoadMore && visibleRepos.length < gitRepos.length && (\n        <div className=\"mr-4 text-right\">\n          <LinkButton onClick={increaseLimit}>\n            {loadMoreText}\n          </LinkButton>\n        </div>\n      )}\n      {gitRepos.length === 0 && <div>...</div>}\n    </div>\n  );\n};\n","import React, { HTMLProps } from 'react';\n\ninterface Props extends Omit<HTMLProps<HTMLButtonElement>, \"className\" | \"type\"> {};\n\nexport const LinkButton: React.FC<Props> = ({ children, ...props }) => (\n  <button\n    className=\"p-0 bg-opacity-0 hover:bg-opacity-0 active:bg-opacity-0 focus:shadow-none text-blue-600 hover:text-blue-800\"\n    {...props}\n  >\n    {children}\n  </button>\n);\n"],"sourceRoot":""}