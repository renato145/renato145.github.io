{"version":3,"sources":["webpack:///./src/pages/experiments.js","webpack:///./src/components/GithubPreview.js","webpack:///./src/components/Experiments.js","webpack:///./src/components/LinkButton.js","webpack:///./src/components/useGitRepos.js","webpack:///./src/components/utils.js"],"names":["ExperimentIndex","location","title","description","headerConfig","GithubPreview","data","props","homepageUrl","url","imgUrl","name","tags","updatedAt","className","href","target","rel","src","alt","moment","calendar","sameElse","TagList","Experiments","showLimit","showLoadMore","loadMoreText","tag","gitRepos","useGitRepos","useState","limit","setLimit","visibleRepos","slice","length","map","repo","i","key","LinkButton","onClick","children","useStaticQuery","allRepos","github","repositoryOwner","repositories","nodes","allGitReposJson","useMemo","forEach","d","indexOf","repoInfo","find","o","Object","assign","str","toLowerCase","replace","toUpperCase","titleCase","singleSpace","formatName","push"],"mappings":"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","file":"component---src-pages-experiments-js-34040685702cfb95d665.js","sourcesContent":["import React from 'react';\nimport { Layout } from '../components/Layout';\nimport { Experiments } from '../components/Experiments';\n\nconst ExperimentIndex = ({ location }) => {\n  const title = 'Experiments';\n\n  return (\n    <Layout\n      location={location}\n      title={title}\n      description='Playground, experiments, random codes...'\n      headerConfig={{ title }}\n    >\n      <Experiments />\n    </Layout>\n  );\n};\n\nexport default ExperimentIndex;\n","import React from 'react';\nimport moment from 'moment';\nimport { TagList } from './TagList';\n\nexport const GithubPreview = ({ data, ...props }) => {\n  const { homepageUrl, url, imgUrl, name, tags, description, updatedAt } = data;\n\n  return (\n    <div {...props}>\n      <div className=\"w-full p-1 transition duration-150 rounded border shadow-sm hover:shadow-md\">\n        {imgUrl && (\n          <a href={homepageUrl || url} target=\"_black\" rel=\"noopener\">\n            <img className=\"\" src={imgUrl} alt={name} />\n          </a>\n        )}\n\n        <div className=\"mt-0 px-3 pb-2\">\n          <div>\n            {updatedAt && (\n              <small className=\"text-gray-600\">\n                Last updated:{' '}\n                {moment(updatedAt).calendar(null, {\n                  sameElse: 'DD/MM/YYYY',\n                })}\n              </small>\n            )}\n          </div>\n          <div className=\"text-xl font-semibold\">{name}</div>\n          <TagList className=\"text-xs\" tags={tags} />\n          <div className=\"mt-1\">{description}</div>\n          <div className=\"mt-4 flex flex-wrap justify-between\">\n            {url && (\n              <a href={url} target=\"_black\" rel=\"noopener\">\n                Go to code\n              </a>\n            )}\n            {homepageUrl && (\n              <a href={homepageUrl} target=\"_black\" rel=\"noopener\">\n                View\n              </a>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { GithubPreview } from './GithubPreview';\nimport { LinkButton } from './LinkButton';\nimport { useGitRepos } from './useGitRepos';\n\nexport const Experiments = ({\n  title = false,\n  showLimit = 6,\n  showLoadMore = true,\n  loadMoreText = 'Load more',\n  tag,\n  ...props\n}) => {\n  const gitRepos = useGitRepos({ tag });\n  const [limit, setLimit] = useState(showLimit);\n  const visibleRepos = gitRepos.slice(0, limit || gitRepos.length);\n\n  return (\n    <div {...props}>\n      {title && <h2 className=\"font-medium\">Experiments</h2>}\n      <div className=\"mt-2 flex flex-wrap items-stretch\">\n        {visibleRepos.map((repo, i) => (\n          <GithubPreview key={i} data={repo} className=\"flex flex-auto p-2 md:max-w-1/2 xl:max-w-1/3\" />\n        ))}\n      </div>\n      {showLoadMore && visibleRepos.length < gitRepos.length && (\n        <div className=\"mr-4 text-right\">\n          <LinkButton onClick={() => setLimit((limit) => limit + showLimit)}>\n            {loadMoreText}\n          </LinkButton>\n        </div>\n      )}\n      {gitRepos.length === 0 && <div>...</div>}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const LinkButton = ({ children, ...props }) => (\n  <button\n    className=\"p-0 bg-opacity-0 hover:bg-opacity-0 active:bg-opacity-0 focus:shadow-none text-blue-600 hover:text-blue-800\"\n    {...props}\n  >\n    {children}\n  </button>\n);\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { useMemo } from 'react';\nimport { unCamelCase, singleSpace, titleCase } from './utils';\n\nconst formatName = (name) =>\n  titleCase(singleSpace(unCamelCase(name.replace(/[-_]/g, ' '))));\n\nexport const useGitRepos = ({ tag, name }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allGitReposJson {\n          nodes {\n            name\n            showName\n            tags\n          }\n        }\n        github {\n          repositoryOwner(login: \"renato145\") {\n            repositories(\n              last: 100\n              orderBy: { field: UPDATED_AT, direction: DESC }\n            ) {\n              nodes {\n                name\n                homepageUrl\n                url\n                updatedAt\n                openGraphImageUrl\n                description\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n  const allRepos = data.github.repositoryOwner.repositories.nodes;\n  const gitRepos = data.allGitReposJson.nodes;\n\n  const repos = useMemo(() => {\n    let data = [];\n    gitRepos.forEach((d) => {\n      if (name && d.name !== name) return;\n      if (tag && d.tags.indexOf(tag) === -1) return;\n      const repoInfo = { ...allRepos.find((o) => o.name === d.name) };\n      const repo = Object.assign(repoInfo, d);\n      const url = repo['openGraphImageUrl'];\n      if (url.indexOf('https://repository-images') > -1) repo['imgUrl'] = url;\n      repo['name'] = repo['showName']\n        ? repo['showName']\n        : formatName(repo['name']);\n      data.push(repo);\n    });\n\n    return data;\n  }, [allRepos, gitRepos, tag, name]);\n\n  return repos;\n};\n","export const unCamelCase = str => str.replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0\\xDF])/g, \"$1 $2\").toLowerCase();\nexport const singleSpace = str => str.replace(/\\s+/g, ' ');\nexport const titleCase = str => str.toLowerCase().replace(/^\\w|\\s\\w/g, d => d.toUpperCase());\nexport const strJoin = (str, separator=', ') => str.reduce((o,acc) => `${o}${separator}${acc}`);\nexport const contains = (object, query) => {\n  if (object === null) return false;\n  if (typeof object === 'undefined') return false;\n  return object.indexOf(query) > -1;\n};\n"],"sourceRoot":""}