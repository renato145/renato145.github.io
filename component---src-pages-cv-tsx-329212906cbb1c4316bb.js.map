{"version":3,"file":"component---src-pages-cv-tsx-329212906cbb1c4316bb.js","mappings":"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","sources":["webpack://renato-hermoza/./src/hooks/usePublications.tsx","webpack://renato-hermoza/./src/pages/cv.tsx","webpack://renato-hermoza/./src/hooks/useExperience.tsx","webpack://renato-hermoza/./src/hooks/useEducation.tsx","webpack://renato-hermoza/./src/hooks/useTeaching.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\nimport { PublicationsAll } from '../Types';\n\nexport const usePublications = () => {\n  const publications = useStaticQuery<PublicationsAll>(\n    graphql`\n      query {\n        allPublicationsJson {\n          nodes {\n            authors\n            conference\n            doi\n            title\n            year\n          }\n        }\n      }\n    `\n  ).allPublicationsJson.nodes;\n\n  return publications;\n};\n","import React, { HTMLProps } from 'react';\nimport SEO from '../components/Seo';\nimport { usePublications } from '../hooks/usePublications';\nimport { useExperience } from '../hooks/useExperience';\nimport { useEducation } from '../hooks/useEducation';\nimport { useTeaching } from '../hooks/useTeaching';\nimport {\n  Publication as PublicationType,\n  Education as EducationType,\n  Experience as ExperienceType,\n  Teaching as TeachingType,\n} from '../Types';\nimport { formatYMDate } from '../utils';\nimport { Navigation } from '../components/Navigation';\n\nconst Page: React.FC<HTMLProps<HTMLDivElement>> = ({ children, ...props }) => (\n  <div\n    className=\"mx-auto mb-4 bg-white px-8 py-4 shadow-2xl print:mb-0 print:shadow-none\"\n    style={{\n      width: '21cm',\n      height: '29.7cm',\n      pageBreakAfter: 'always',\n      pageBreakInside: 'avoid',\n    }}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\ninterface SectionProps extends HTMLProps<HTMLDivElement> {\n  title: string;\n}\n\nconst Section: React.FC<SectionProps> = ({ title, ...props }) => (\n  <div {...props}>\n    <p className=\"text-2xl font-extrabold\">{title}</p>\n    <div className=\"border-b-4 border-slate-300 shadow\" />\n  </div>\n);\n\ninterface EducationItemProps extends HTMLProps<HTMLDivElement>, EducationType {}\n\nconst EducationItem: React.FC<EducationItemProps> = ({\n  university,\n  degree,\n  yearIn,\n  yearOut,\n  pending = false,\n  className,\n  ...props\n}) => (\n  <div className={`w-full ${className ?? ''}`} {...props}>\n    <div className=\"flex justify-between\">\n      <p className=\"text-lg font-medium\">{university}</p>\n      <p className=\"text-sm font-medium text-gray-500\">{`${yearIn} - ${yearOut}${\n        pending ? ' (expected)' : ''\n      }`}</p>\n    </div>\n    <p>{degree}</p>\n  </div>\n);\n\ninterface ExperienceProps extends HTMLProps<HTMLDivElement>, ExperienceType {}\n\nconst Experience: React.FC<ExperienceProps> = ({\n  place,\n  position,\n  country,\n  dateIn,\n  dateOut,\n  details,\n  className,\n  ...props\n}) => (\n  <div className={`w-full ${className ?? ''}`} {...props}>\n    <div className=\"flex justify-between\">\n      <p className=\"font-medium\">\n        {place} | {position}{' '}\n        <span className=\"text-sm  text-gray-500\">({country})</span>\n      </p>\n      <p className=\"text-sm font-medium text-gray-500\">\n        {formatYMDate(dateIn)} - {formatYMDate(dateOut)}\n      </p>\n    </div>\n    {details.length > 0 && (\n      <ul className=\"ml-4 list-outside list-disc pl-4\">\n        {details.map((o, i) => (\n          <li className=\"text-sm\" key={i}>\n            {o}\n          </li>\n        ))}\n      </ul>\n    )}\n  </div>\n);\n\ninterface TeachingProps extends HTMLProps<HTMLDivElement>, TeachingType {}\n\nconst Teaching: React.FC<TeachingProps> = ({\n  place,\n  dateIn,\n  dateOut,\n  details,\n  className,\n  ...props\n}) => (\n  <div className={`w-full ${className ?? ''}`} {...props}>\n    <div className=\"flex justify-between\">\n      <p className=\"font-medium\">{place}</p>\n      <p className=\"text-sm font-medium text-gray-500\">\n        {formatYMDate(dateIn)} - {formatYMDate(dateOut)}\n      </p>\n    </div>\n    {details.length > 0 && (\n      <ul className=\"ml-4 list-outside list-disc pl-4\">\n        {details.map((o, i) => (\n          <li className=\"text-sm\" key={i}>\n            {o}\n          </li>\n        ))}\n      </ul>\n    )}\n  </div>\n);\n\ninterface PublicationProps\n  extends Omit<HTMLProps<HTMLLIElement>, 'title'>,\n    PublicationType {}\n\nconst Publication: React.FC<PublicationProps> = ({\n  authors,\n  title,\n  conference,\n  doi,\n  ...props\n}) => (\n  <li {...props}>\n    {authors} <span className=\"font-medium\">“{title}”</span> {conference}\n    {doi && (\n      <>\n        {' DOI: '}\n        <a href={`https://doi.org/${doi}`} target=\"_black\" rel=\"noopener\">\n          {doi}\n        </a>\n      </>\n    )}\n  </li>\n);\n\nconst CV: React.FC = () => {\n  const publications = usePublications();\n  const experience = useExperience();\n  const education = useEducation();\n  const teaching = useTeaching();\n\n  return (\n    <div className=\"bg-slate-400 pb-1 print:pb-0\">\n      <SEO title=\"CV\" description=\"My CV\" />\n      <div className=\"mx-auto w-[21cm] print:hidden\">\n        <Navigation />\n      </div>\n      <Page>\n        <div className=\"mt-7 text-center leading-tight\">\n          <p className=\"text-3xl font-semibold\">Renato Hermoza Aragonés</p>\n          <div className=\"mt-1 flex justify-center\">\n            <a\n              href=\"https://renato145.github.io/\"\n              target=\"_black\"\n              rel=\"noopener\"\n            >\n              renato145.github.io\n            </a>\n            <p className=\"mx-2\">•</p>\n            <a href=\"renato.hermoza@pucp.edu.pe\" target=\"_black\" rel=\"noopener\">\n              renato.hermoza@pucp.edu.pe\n            </a>\n          </div>\n        </div>\n\n        <div className=\"mt-10\">\n          <Section title=\"Resume\" />\n          <p className=\"mt-2 px-1 text-justify\">\n            Final year PhD. student at the University of Adelaide with main\n            research interests in the fields of computer vision, machine\n            learning, data visualization and data ethics.\n          </p>\n        </div>\n\n        <div className=\"mt-8\">\n          <Section title=\"Education\" />\n          {education.map((o, i) => (\n            <EducationItem key={i} className=\"mt-2 px-1 text-justify\" {...o} />\n          ))}\n        </div>\n\n        <div className=\"mt-8\">\n          <Section title=\"Professional Experience\" />\n          {experience.map((o, i) => (\n            <Experience key={i} className=\"mt-2 px-1 text-justify\" {...o} />\n          ))}\n        </div>\n\n        <div className=\"mt-8\">\n          <Section title=\"Teaching Experience\" />\n          {teaching.map((o, i) => (\n            <Teaching key={i} className=\"mt-2 px-1 text-justify\" {...o} />\n          ))}\n        </div>\n      </Page>\n\n      <Page>\n        <div className=\"mt-8\">\n          <Section title=\"Publications\" />\n          <ul className=\"mt-2 ml-4 list-outside list-disc px-1\">\n            {publications.map((o, i) => (\n              <Publication key={i} className=\"mt-1 text-justify\" {...o} />\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"mt-8\">\n          <Section title=\"Skills\" />\n          <ul className=\"mt-1 ml-4 list-outside list-disc px-1 text-justify\">\n            <li className=\"mt-1\">\n              Knowledge and active research of the current state of the art on\n              deep learning and computer vision.\n            </li>\n            <li className=\"mt-1\">\n              Advance skill on Python building data pipelines, machine learning\n              models, web servers and open software development.\n            </li>\n            <li className=\"mt-1\">\n              Experience using Rust for CLI applications, backend servers, web\n              scrapping, WebAssembly, Python bindings and high-performance use\n              cases like data pipelines.\n            </li>\n            <li className=\"mt-1\">\n              Experience building data visualization and interactive dashboards\n              using Python and JavaScript (React, D3, Threejs).\n            </li>\n            <li className=\"mt-1\">\n              <span className=\"font-medium\">Main programming languages:</span>{' '}\n              Python, Rust, Julia and JS/Typescript.\n            </li>\n            <li className=\"mt-1\">\n              <span className=\"font-medium\">Additional skills:</span> message\n              queues (Kafka, RabbitMQ, ZeroMQ), spatial data (PostGIS).\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"mt-8\">\n          <Section title=\"Languages\" />\n          <ul className=\"mt-2 ml-4 list-outside list-disc\">\n            <li>Spanish (native)</li>\n            <li>English (fluent)</li>\n          </ul>\n        </div>\n      </Page>\n    </div>\n  );\n};\n\nexport default CV;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { ExperienceAll } from '../Types';\n\nexport const useExperience = () => {\n  const experience = useStaticQuery<ExperienceAll>(\n    graphql`\n      query {\n        allExperienceJson {\n          nodes {\n            place\n            position\n            country\n            dateIn\n            dateOut\n            details\n          }\n        }\n      }\n    `\n  ).allExperienceJson.nodes;\n\n  return experience;\n};\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { EducationAll } from '../Types';\n\nexport const useEducation = () => {\n  const education = useStaticQuery<EducationAll>(\n    graphql`\n      query {\n        allEducationJson {\n          nodes {\n            university\n            degree\n            yearIn\n            yearOut\n            country\n            pending\n          }\n        }\n      }\n    `\n  ).allEducationJson.nodes;\n\n  return education;\n};\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { TeachingAll } from '../Types';\n\nexport const useTeaching = () => {\n  const teaching = useStaticQuery<TeachingAll>(\n    graphql`\n      query {\n        allTeachingJson {\n          nodes {\n            place\n            dateIn\n            dateOut\n            details\n          }\n        }\n      }\n    `\n  ).allTeachingJson.nodes;\n\n  return teaching;\n};\n"],"names":["usePublications","useStaticQuery","Page","children","props","className","style","width","height","pageBreakAfter","pageBreakInside","Section","title","EducationItem","university","degree","yearIn","yearOut","pending","Experience","place","position","country","dateIn","dateOut","details","formatYMDate","key","i","Teaching","Publication","authors","conference","doi","href","target","rel","publications","experience","education","teaching","description"],"sourceRoot":""}